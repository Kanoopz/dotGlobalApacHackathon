{"message":"crate `simpleToken` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case: `simple_token`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: crate `simpleToken` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: convert the identifier to snake case: `simple_token`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"module `simpleToken` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":74,"byte_end":85,"line_start":4,"line_end":4,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"mod simpleToken ","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":74,"byte_end":85,"line_start":4,"line_end":4,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"mod simpleToken ","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"simple_token","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module `simpleToken` should have a snake case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod simpleToken \u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `simple_token`\u001b[0m\n\n"}
{"message":"variable `paramDecimals` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":883,"byte_end":896,"line_start":28,"line_end":28,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"        pub fn new(paramDecimals: u8) -> Self ","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":883,"byte_end":896,"line_start":28,"line_end":28,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"        pub fn new(paramDecimals: u8) -> Self ","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":"param_decimals","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `paramDecimals` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:28:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn new(paramDecimals: u8) -> Self \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `param_decimals`\u001b[0m\n\n"}
{"message":"variable `emptyMapping` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":937,"byte_end":949,"line_start":30,"line_end":30,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"            let emptyMapping = Mapping::default();","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":937,"byte_end":949,"line_start":30,"line_end":30,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"            let emptyMapping = Mapping::default();","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"empty_mapping","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `emptyMapping` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:30:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let emptyMapping = Mapping::default();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `empty_mapping`\u001b[0m\n\n"}
{"message":"method `mintTokens` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1204,"byte_end":1214,"line_start":39,"line_end":39,"column_start":16,"column_end":26,"is_primary":true,"text":[{"text":"        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)","highlight_start":16,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1204,"byte_end":1214,"line_start":39,"line_end":39,"column_start":16,"column_end":26,"is_primary":true,"text":[{"text":"        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)","highlight_start":16,"highlight_end":26}],"label":null,"suggested_replacement":"mint_tokens","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `mintTokens` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:39:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mint_tokens`\u001b[0m\n\n"}
{"message":"variable `paramAddressToMint` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1226,"byte_end":1244,"line_start":39,"line_end":39,"column_start":38,"column_end":56,"is_primary":true,"text":[{"text":"        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)","highlight_start":38,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1226,"byte_end":1244,"line_start":39,"line_end":39,"column_start":38,"column_end":56,"is_primary":true,"text":[{"text":"        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)","highlight_start":38,"highlight_end":56}],"label":null,"suggested_replacement":"param_address_to_mint","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `paramAddressToMint` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:39:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `param_address_to_mint`\u001b[0m\n\n"}
{"message":"variable `paramQuantity` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1257,"byte_end":1270,"line_start":39,"line_end":39,"column_start":69,"column_end":82,"is_primary":true,"text":[{"text":"        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)","highlight_start":69,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1257,"byte_end":1270,"line_start":39,"line_end":39,"column_start":69,"column_end":82,"is_primary":true,"text":[{"text":"        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)","highlight_start":69,"highlight_end":82}],"label":null,"suggested_replacement":"param_quantity","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `paramQuantity` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:39:69\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `param_quantity`\u001b[0m\n\n"}
{"message":"variable `actualAddressToMintBalance` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1306,"byte_end":1332,"line_start":41,"line_end":41,"column_start":21,"column_end":47,"is_primary":true,"text":[{"text":"            let mut actualAddressToMintBalance = self.balances.get(paramAddressToMint).unwrap_or(0);","highlight_start":21,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1306,"byte_end":1332,"line_start":41,"line_end":41,"column_start":21,"column_end":47,"is_primary":true,"text":[{"text":"            let mut actualAddressToMintBalance = self.balances.get(paramAddressToMint).unwrap_or(0);","highlight_start":21,"highlight_end":47}],"label":null,"suggested_replacement":"actual_address_to_mint_balance","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `actualAddressToMintBalance` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:41:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut actualAddressToMintBalance = self.balances.get(paramAddressToMint\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `actual_address_to_mint_balance`\u001b[0m\n\n"}
{"message":"variable `paramAddressTransferer` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1751,"byte_end":1773,"line_start":49,"line_end":49,"column_start":36,"column_end":58,"is_primary":true,"text":[{"text":"        pub fn transfer(&mut self, paramAddressTransferer: AccountId, paramQuantity: u8, paramAddressTo: AccountId)","highlight_start":36,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1751,"byte_end":1773,"line_start":49,"line_end":49,"column_start":36,"column_end":58,"is_primary":true,"text":[{"text":"        pub fn transfer(&mut self, paramAddressTransferer: AccountId, paramQuantity: u8, paramAddressTo: AccountId)","highlight_start":36,"highlight_end":58}],"label":null,"suggested_replacement":"param_address_transferer","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `paramAddressTransferer` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:49:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mfn transfer(&mut self, paramAddressTransferer: AccountId, paramQuantity: u8, param\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `param_address_transferer`\u001b[0m\n\n"}
{"message":"variable `paramQuantity` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1786,"byte_end":1799,"line_start":49,"line_end":49,"column_start":71,"column_end":84,"is_primary":true,"text":[{"text":"        pub fn transfer(&mut self, paramAddressTransferer: AccountId, paramQuantity: u8, paramAddressTo: AccountId)","highlight_start":71,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1786,"byte_end":1799,"line_start":49,"line_end":49,"column_start":71,"column_end":84,"is_primary":true,"text":[{"text":"        pub fn transfer(&mut self, paramAddressTransferer: AccountId, paramQuantity: u8, paramAddressTo: AccountId)","highlight_start":71,"highlight_end":84}],"label":null,"suggested_replacement":"param_quantity","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `paramQuantity` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:49:71\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mId, paramQuantity: u8, paramAddressTo: AccountId)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `param_quantity`\u001b[0m\n\n"}
{"message":"variable `paramAddressTo` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1805,"byte_end":1819,"line_start":49,"line_end":49,"column_start":90,"column_end":104,"is_primary":true,"text":[{"text":"        pub fn transfer(&mut self, paramAddressTransferer: AccountId, paramQuantity: u8, paramAddressTo: AccountId)","highlight_start":90,"highlight_end":104}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1805,"byte_end":1819,"line_start":49,"line_end":49,"column_start":90,"column_end":104,"is_primary":true,"text":[{"text":"        pub fn transfer(&mut self, paramAddressTransferer: AccountId, paramQuantity: u8, paramAddressTo: AccountId)","highlight_start":90,"highlight_end":104}],"label":null,"suggested_replacement":"param_address_to","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `paramAddressTo` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:49:90\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mountId, paramQuantity: u8, paramAddressTo: AccountId)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `param_address_to`\u001b[0m\n\n"}
{"message":"variable `actualTransfererBalance` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1862,"byte_end":1885,"line_start":51,"line_end":51,"column_start":21,"column_end":44,"is_primary":true,"text":[{"text":"            let mut actualTransfererBalance = self.balances.get(&paramAddressTransferer).unwrap_or(0);","highlight_start":21,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1862,"byte_end":1885,"line_start":51,"line_end":51,"column_start":21,"column_end":44,"is_primary":true,"text":[{"text":"            let mut actualTransfererBalance = self.balances.get(&paramAddressTransferer).unwrap_or(0);","highlight_start":21,"highlight_end":44}],"label":null,"suggested_replacement":"actual_transferer_balance","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `actualTransfererBalance` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:51:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut actualTransfererBalance = self.balances.get(&paramAddressTransfer\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `actual_transferer_balance`\u001b[0m\n\n"}
{"message":"variable `actualToBalance` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2191,"byte_end":2206,"line_start":58,"line_end":58,"column_start":21,"column_end":36,"is_primary":true,"text":[{"text":"            let mut actualToBalance = self.balances.get(paramAddressTo).unwrap_or(0);","highlight_start":21,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2191,"byte_end":2206,"line_start":58,"line_end":58,"column_start":21,"column_end":36,"is_primary":true,"text":[{"text":"            let mut actualToBalance = self.balances.get(paramAddressTo).unwrap_or(0);","highlight_start":21,"highlight_end":36}],"label":null,"suggested_replacement":"actual_to_balance","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `actualToBalance` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:58:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut actualToBalance = self.balances.get(paramAddressTo).unwrap_or(0);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `actual_to_balance`\u001b[0m\n\n"}
{"message":"method `balanceOf` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2523,"byte_end":2532,"line_start":65,"line_end":65,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"        pub fn balanceOf(&self, paramAddressToCheck: AccountId) -> u8","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2523,"byte_end":2532,"line_start":65,"line_end":65,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"        pub fn balanceOf(&self, paramAddressToCheck: AccountId) -> u8","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"balance_of","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `balanceOf` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:65:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn balanceOf(&self, paramAddressToCheck: AccountId) -> u8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `balance_of`\u001b[0m\n\n"}
{"message":"variable `paramAddressToCheck` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2540,"byte_end":2559,"line_start":65,"line_end":65,"column_start":33,"column_end":52,"is_primary":true,"text":[{"text":"        pub fn balanceOf(&self, paramAddressToCheck: AccountId) -> u8","highlight_start":33,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2540,"byte_end":2559,"line_start":65,"line_end":65,"column_start":33,"column_end":52,"is_primary":true,"text":[{"text":"        pub fn balanceOf(&self, paramAddressToCheck: AccountId) -> u8","highlight_start":33,"highlight_end":52}],"label":null,"suggested_replacement":"param_address_to_check","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `paramAddressToCheck` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:65:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn balanceOf(&self, paramAddressToCheck: AccountId) -> u8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `param_address_to_check`\u001b[0m\n\n"}
{"message":"method `getDecimals` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2789,"byte_end":2800,"line_start":72,"line_end":72,"column_start":16,"column_end":27,"is_primary":true,"text":[{"text":"        pub fn getDecimals(&self) -> u8","highlight_start":16,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2789,"byte_end":2800,"line_start":72,"line_end":72,"column_start":16,"column_end":27,"is_primary":true,"text":[{"text":"        pub fn getDecimals(&self) -> u8","highlight_start":16,"highlight_end":27}],"label":null,"suggested_replacement":"get_decimals","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `getDecimals` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:72:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn getDecimals(&self) -> u8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_decimals`\u001b[0m\n\n"}
{"message":"method `try_mintTokens` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1204,"byte_end":1214,"line_start":39,"line_end":39,"column_start":16,"column_end":26,"is_primary":true,"text":[{"text":"        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)","highlight_start":16,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":1204,"byte_end":1214,"line_start":39,"line_end":39,"column_start":16,"column_end":26,"is_primary":true,"text":[{"text":"        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)","highlight_start":16,"highlight_end":26}],"label":null,"suggested_replacement":"try_mint_tokens","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `try_mintTokens` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:39:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn mintTokens(&mut self, paramAddressToMint: AccountId, paramQuantity: u8)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `try_mint_tokens`\u001b[0m\n\n"}
{"message":"method `try_balanceOf` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2523,"byte_end":2532,"line_start":65,"line_end":65,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"        pub fn balanceOf(&self, paramAddressToCheck: AccountId) -> u8","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2523,"byte_end":2532,"line_start":65,"line_end":65,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"        pub fn balanceOf(&self, paramAddressToCheck: AccountId) -> u8","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"try_balance_of","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `try_balanceOf` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:65:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn balanceOf(&self, paramAddressToCheck: AccountId) -> u8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `try_balance_of`\u001b[0m\n\n"}
{"message":"method `try_getDecimals` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2789,"byte_end":2800,"line_start":72,"line_end":72,"column_start":16,"column_end":27,"is_primary":true,"text":[{"text":"        pub fn getDecimals(&self) -> u8","highlight_start":16,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs","byte_start":2789,"byte_end":2800,"line_start":72,"line_end":72,"column_start":16,"column_end":27,"is_primary":true,"text":[{"text":"        pub fn getDecimals(&self) -> u8","highlight_start":16,"highlight_end":27}],"label":null,"suggested_replacement":"try_get_decimals","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `try_getDecimals` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kanoopz/Desktop/blockchain/POLKADOT/hackathonGitClone/dotGlobalApacHackathon/smartContracts/simpleToken/lib.rs:72:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn getDecimals(&self) -> u8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `try_get_decimals`\u001b[0m\n\n"}
{"message":"19 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 19 warnings emitted\u001b[0m\n\n"}
