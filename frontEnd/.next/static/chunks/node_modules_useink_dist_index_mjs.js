"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_useink_dist_index_mjs"],{

/***/ "./node_modules/useink/dist/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/useink/dist/index.mjs ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"APIContext\": function() { return /* binding */ APIContext; },\n/* harmony export */   \"APIProvider\": function() { return /* binding */ APIProvider; },\n/* harmony export */   \"CallError\": function() { return /* binding */ CallError; },\n/* harmony export */   \"CodeHashError\": function() { return /* binding */ CodeHashError; },\n/* harmony export */   \"DeployerError\": function() { return /* binding */ DeployerError; },\n/* harmony export */   \"SalterError\": function() { return /* binding */ SalterError; },\n/* harmony export */   \"UseInkProvider\": function() { return /* binding */ UseInkProvider; },\n/* harmony export */   \"useAbiMessage\": function() { return /* binding */ useAbiMessage; },\n/* harmony export */   \"useAllWallets\": function() { return /* binding */ useAllWallets; },\n/* harmony export */   \"useApi\": function() { return /* binding */ useApi; },\n/* harmony export */   \"useApis\": function() { return /* binding */ useApis; },\n/* harmony export */   \"useBalance\": function() { return /* binding */ useBalance; },\n/* harmony export */   \"useBlockHeader\": function() { return /* binding */ useBlockHeader; },\n/* harmony export */   \"useBlockHeaders\": function() { return /* binding */ useBlockHeaders; },\n/* harmony export */   \"useCall\": function() { return /* binding */ useCall; },\n/* harmony export */   \"useCallSubscription\": function() { return /* binding */ useCallSubscription; },\n/* harmony export */   \"useChain\": function() { return /* binding */ useChain; },\n/* harmony export */   \"useChainDecimals\": function() { return /* binding */ useChainDecimals; },\n/* harmony export */   \"useChainRpc\": function() { return /* binding */ useChainRpc; },\n/* harmony export */   \"useChainRpcList\": function() { return /* binding */ useChainRpcList; },\n/* harmony export */   \"useChains\": function() { return /* binding */ useChains; },\n/* harmony export */   \"useCodeHash\": function() { return /* binding */ useCodeHash; },\n/* harmony export */   \"useConfig\": function() { return /* binding */ useConfig; },\n/* harmony export */   \"useContract\": function() { return /* binding */ useContract; },\n/* harmony export */   \"useDefaultCaller\": function() { return /* binding */ useDefaultCaller; },\n/* harmony export */   \"useDeployer\": function() { return /* binding */ useDeployer; },\n/* harmony export */   \"useDryRun\": function() { return /* binding */ useDryRun; },\n/* harmony export */   \"useEventSubscription\": function() { return /* binding */ useEventSubscription; },\n/* harmony export */   \"useEvents\": function() { return /* binding */ useEvents; },\n/* harmony export */   \"useInstalledWallets\": function() { return /* binding */ useInstalledWallets; },\n/* harmony export */   \"useMetadata\": function() { return /* binding */ useMetadata; },\n/* harmony export */   \"useSalter\": function() { return /* binding */ useSalter; },\n/* harmony export */   \"useTimestampDate\": function() { return /* binding */ useTimestampDate; },\n/* harmony export */   \"useTimestampNow\": function() { return /* binding */ useTimestampNow; },\n/* harmony export */   \"useTimestampQuery\": function() { return /* binding */ useTimestampQuery; },\n/* harmony export */   \"useTokenSymbol\": function() { return /* binding */ useTokenSymbol; },\n/* harmony export */   \"useTransfer\": function() { return /* binding */ useTransfer; },\n/* harmony export */   \"useTx\": function() { return /* binding */ useTx; },\n/* harmony export */   \"useTxEvents\": function() { return /* binding */ useTxEvents; },\n/* harmony export */   \"useTxPaymentInfo\": function() { return /* binding */ useTxPaymentInfo; },\n/* harmony export */   \"useUninstalledWallets\": function() { return /* binding */ useUninstalledWallets; },\n/* harmony export */   \"useUnixMilliToDate\": function() { return /* binding */ useUnixMilliToDate; },\n/* harmony export */   \"useWallet\": function() { return /* binding */ useWallet; }\n/* harmony export */ });\n/* harmony import */ var _chunk_USPRARIS_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-USPRARIS.mjs */ \"./node_modules/useink/dist/chunk-USPRARIS.mjs\");\n/* harmony import */ var _chunk_ABVRVYC3_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-ABVRVYC3.mjs */ \"./node_modules/useink/dist/chunk-ABVRVYC3.mjs\");\n/* harmony import */ var _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-NLX3WHD4.mjs */ \"./node_modules/useink/dist/chunk-NLX3WHD4.mjs\");\n/* harmony import */ var _chunk_UT43TYHK_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-UT43TYHK.mjs */ \"./node_modules/useink/dist/chunk-UT43TYHK.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n\n\n\n\n// src/react/providers/config/model.ts\nvar DEFAULT_CONFIG = {\n  dappName: \"A dapp built with useInk!\",\n  chains: [_chunk_USPRARIS_mjs__WEBPACK_IMPORTED_MODULE_0__.RococoContractsTestnet],\n  events: {\n    expiration: _chunk_ABVRVYC3_mjs__WEBPACK_IMPORTED_MODULE_1__.FIVE_SECONDS,\n    checkInterval: _chunk_ABVRVYC3_mjs__WEBPACK_IMPORTED_MODULE_1__.HALF_A_SECOND\n  },\n  setChainRpc: () => null,\n  chainRpcs: {}\n};\n\n// src/react/providers/config/context.ts\n\nvar ConfigContext = react__WEBPACK_IMPORTED_MODULE_4__.createContext(\n  DEFAULT_CONFIG\n);\n\n// src/react/hooks/config/useConfig.ts\n\nvar useConfig = () => (0,react__WEBPACK_IMPORTED_MODULE_4__.useContext)(ConfigContext);\n\n// src/react/hooks/config/useChain.ts\n\nvar useChain = (chainId) => {\n  const { chains } = useConfig();\n  return (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(() => {\n    return chainId ? chains.find((c) => c.id === chainId) : chains[0];\n  }, [chains, chainId]);\n};\n\n// src/react/hooks/config/useChainRpc.ts\nvar useChainRpc = (chainId) => {\n  const { chainRpcs } = useConfig();\n  const chain = useChain(chainId);\n  const chainIdOrDefault = chainId || chain?.id;\n  return chainIdOrDefault && chainRpcs[chainIdOrDefault];\n};\n\n// src/react/hooks/config/useChainRpcList.ts\nvar useChainRpcList = (chainId) => {\n  const chain = useChain(chainId);\n  const { setChainRpc } = useConfig();\n  return { rpcs: chain?.rpcs || [], setChainRpc };\n};\n\n// src/react/hooks/config/useChains.ts\nvar useChains = () => useConfig().chains;\n\n// src/react/hooks/config/useDefaultCaller.ts\n\nvar useDefaultCaller = (chainId) => {\n  const { caller } = useConfig();\n  const defaultChain = useChain();\n  if (!caller)\n    return;\n  return (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(\n    () => caller[`${chainId || defaultChain}`] || caller.default,\n    [chainId, caller, defaultChain]\n  );\n};\n\n// src/react/hooks/contracts/useAbiMessage.ts\n\nfunction useAbiMessage(contract, message) {\n  const abiMessage = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(() => {\n    if (!contract)\n      return;\n    return (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.toContractAbiMessage)(contract, message);\n  }, [contract, message]);\n  if (!abiMessage || !abiMessage.ok)\n    return;\n  return abiMessage.value;\n}\n\n// src/react/providers/wallet/model.ts\nvar WALLET_DEFAULTS = {\n  connect: () => void 0,\n  disconnect: () => void 0,\n  account: void 0,\n  accounts: void 0,\n  setAccount: () => void 0,\n  isConnected: false,\n  getWallets: _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.getWallets,\n  getWalletBySource: _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.getWalletBySource\n};\n\n// src/react/providers/wallet/context.ts\n\nvar WalletContext = (0,react__WEBPACK_IMPORTED_MODULE_4__.createContext)({\n  ...WALLET_DEFAULTS\n});\n\n// src/react/providers/wallet/provider.tsx\n\nfunction getAutoConnectWalletInfo(key) {\n  const item = localStorage.getItem(key);\n  return item ? JSON.parse(item) : null;\n}\nfunction enableAutoConnect(a, key) {\n  localStorage.setItem(key, JSON.stringify(a));\n}\nfunction disableAutoConnect(key) {\n  if (getAutoConnectWalletInfo(key))\n    localStorage.removeItem(key);\n}\nvar WalletProvider = ({\n  children\n}) => {\n  const C = useConfig();\n  const [account, setWalletAccount] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const [accounts, setAccounts] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const [walletError, setWalletError] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const dappName = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(\n    () => C.dappName && C.dappName.trim().length > 0 ? C.dappName : \"A Dapp built in useink\",\n    [C.dappName]\n  );\n  const [activeWallet, setActiveWallet] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const disconnect = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(() => {\n    disableAutoConnect(dappName);\n    setAccounts(void 0);\n    setWalletAccount(void 0);\n    setActiveWallet(void 0);\n    setWalletError(void 0);\n  }, [dappName]);\n  const setAccount = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(\n    (newAccount) => {\n      const accountDisabled = !accounts?.find(\n        (a) => a.address === newAccount.address\n      );\n      if (accountDisabled) {\n        setWalletError(\"AccountNotEnabled\" /* AccountDisabled */);\n        return;\n      }\n      walletError !== void 0 && setWalletError(void 0);\n      setWalletAccount(newAccount);\n      if (!C.wallet?.skipAutoConnect) {\n        enableAutoConnect(\n          {\n            address: newAccount.address,\n            wallet: newAccount.source\n          },\n          dappName\n        );\n      }\n    },\n    [accounts, C.wallet?.skipAutoConnect]\n  );\n  const connectWallet = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(\n    async (walletName) => {\n      walletError && setWalletError(void 0);\n      const w = (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.getWalletBySource)(walletName);\n      if (!w) {\n        setWalletError(\"WalletNotInstalled\" /* WalletNotInstalled */);\n        setActiveWallet(void 0);\n        return;\n      }\n      try {\n        await w.enable(dappName);\n      } catch (_e) {\n        setWalletError(\"EnableFailed\" /* EnableFailed */);\n        setActiveWallet(void 0);\n        return;\n      }\n      const unsub = await w.subscribeAccounts((accts) => {\n        setAccounts(accts);\n        const firstAccount = accts?.[0];\n        const noAccountsEnabled = !accts || !firstAccount;\n        if (noAccountsEnabled) {\n          setWalletError(\"NoAccountsEnabled\" /* NoAccountsEnabled */);\n          setWalletAccount(void 0);\n          disableAutoConnect(dappName);\n          return;\n        }\n        const activeAccountNoLongerConnected = account && !accts?.find((a) => a.address === account?.address);\n        if (activeAccountNoLongerConnected) {\n          setWalletAccount(firstAccount);\n          if (!C.wallet?.skipAutoConnect) {\n            enableAutoConnect(\n              {\n                address: firstAccount.address,\n                wallet: firstAccount.source\n              },\n              dappName\n            );\n          }\n          return;\n        }\n        const autoConnect = getAutoConnectWalletInfo(dappName);\n        const autoConnectAccount = autoConnect && accts.find((a) => a.address === autoConnect.address);\n        const initialAccount = autoConnectAccount || firstAccount;\n        setWalletAccount(initialAccount);\n        if (!C.wallet?.skipAutoConnect) {\n          enableAutoConnect(\n            {\n              address: initialAccount.address,\n              wallet: initialAccount.source\n            },\n            dappName\n          );\n        }\n      });\n      return unsub;\n    },\n    []\n  );\n  const connect = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)((walletName) => {\n    setActiveWallet(walletName);\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    if (!activeWallet) {\n      const wallet = getAutoConnectWalletInfo(dappName)?.wallet;\n      if (wallet)\n        setActiveWallet(wallet);\n      return;\n    }\n    let unsubFunc;\n    connectWallet(activeWallet).then((unsub) => unsubFunc === unsub);\n    return () => unsubFunc?.();\n  }, [activeWallet]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n    WalletContext.Provider,\n    {\n      value: {\n        account,\n        isConnected: Boolean(account),\n        accounts,\n        connect,\n        disconnect,\n        walletError,\n        setAccount,\n        getWallets: _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.getWallets,\n        getWalletBySource: _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.getWalletBySource\n      }\n    },\n    children\n  );\n};\n\n// src/react/hooks/wallets/useWallet.ts\n\nvar useWallet = () => (0,react__WEBPACK_IMPORTED_MODULE_4__.useContext)(WalletContext);\n\n// src/react/hooks/contracts/useCall.ts\n\nvar CallError = /* @__PURE__ */ ((CallError2) => {\n  CallError2[\"ContractUndefined\"] = \"Contract is undefined\";\n  CallError2[\"InvalidAbiMessage\"] = \"Invalid ABI Message\";\n  CallError2[\"NoResponse\"] = \"No response\";\n  return CallError2;\n})(CallError || {});\nfunction useCall(chainContract, message) {\n  const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const [isSubmitting, setIsSubmitting] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n  const abiMessage = useAbiMessage(chainContract?.contract, message);\n  const { account } = useWallet();\n  const defaultCaller = useDefaultCaller(chainContract?.chainId);\n  const send = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(\n    async (args, options) => {\n      const caller = account?.address ? account.address : options?.defaultCaller ? defaultCaller : void 0;\n      if (!abiMessage || !chainContract?.contract || !caller)\n        return;\n      try {\n        setIsSubmitting(true);\n        const callResult = await (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.call)(\n          chainContract.contract,\n          abiMessage,\n          caller,\n          args,\n          options\n        );\n        setResult(callResult);\n        setIsSubmitting(false);\n        return callResult;\n      } catch (e) {\n        console.error(e);\n        setIsSubmitting(false);\n        return;\n      }\n    },\n    [account, abiMessage]\n  );\n  return { send, isSubmitting, result };\n}\n\n// src/react/providers/blockHeader/model.ts\nvar BLOCK_HEADER_DEFAULTS = {};\n\n// src/react/providers/blockHeader/context.ts\n\nvar BlockHeaderContext = (0,react__WEBPACK_IMPORTED_MODULE_4__.createContext)({\n  ...BLOCK_HEADER_DEFAULTS\n});\n\n// src/react/providers/blockHeader/reducer.ts\nfunction chainBlockHeaderReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_CHAIN_BLOCK_HEADER\":\n      return {\n        ...state,\n        [action.chainId]: action.blockHeader\n      };\n  }\n}\n\n// src/react/providers/blockHeader/provider.tsx\n\nvar toBlockNumber = (valWithComma) => parseInt(`${valWithComma?.split(\",\").join(\"\")}`);\nvar BlockHeaderProvider = ({\n  children\n}) => {\n  const chainApis = useApis();\n  const [chainBlockHeaders, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useReducer)(\n    chainBlockHeaderReducer,\n    {}\n  );\n  const chainIds = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(\n    () => chainApis.apis ? Object.keys(chainApis.apis) : [],\n    [chainApis]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    function listenToBlocks() {\n      return chainIds.map((chainId) => {\n        return chainApis?.apis?.[chainId]?.api?.rpc.chain.subscribeNewHeads(\n          (header) => {\n            try {\n              const blockNumber = toBlockNumber(\n                header.number.toHuman()?.toString()\n              );\n              blockNumber && dispatch({\n                type: \"ADD_CHAIN_BLOCK_HEADER\",\n                chainId,\n                blockHeader: { blockNumber, header }\n              });\n            } catch (e) {\n              console.error(e);\n            }\n          }\n        );\n      });\n    }\n    let unsubFuncs;\n    Promise.all(listenToBlocks()).then((unsubs) => unsubFuncs === unsubs);\n    return () => {\n      unsubFuncs?.forEach((unsub) => unsub?.());\n    };\n  }, [chainApis]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(BlockHeaderContext.Provider, { value: chainBlockHeaders }, children);\n};\n\n// src/react/hooks/substrate/useBlockHeader.ts\n\nvar useBlockHeader = (chainId) => {\n  const chain = useChain(chainId);\n  return chain ? (0,react__WEBPACK_IMPORTED_MODULE_4__.useContext)(BlockHeaderContext)[chain.id] : void 0;\n};\nvar useBlockHeaders = () => (0,react__WEBPACK_IMPORTED_MODULE_4__.useContext)(BlockHeaderContext);\n\n// src/react/hooks/contracts/useCallSubscription.ts\n\nfunction useCallSubscription(chainContract, message, args = [], options) {\n  const call2 = useCall(chainContract, message);\n  const blockNumber = useBlockHeader(chainContract?.chainId)?.blockNumber;\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    call2.send(args, options);\n  }, [blockNumber]);\n  return call2;\n}\n\n// src/react/hooks/contracts/useCodeHash.ts\n\nvar CodeHashError = /* @__PURE__ */ ((CodeHashError2) => {\n  CodeHashError2[\"InvalidHash\"] = \"Invalid code hash value.\";\n  return CodeHashError2;\n})(CodeHashError || {});\nvar useCodeHash = () => {\n  const [codeHash, setCodeHash] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\"\");\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    if ((0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.isValidHash)(codeHash, 64)) {\n      error && setError(void 0);\n      return;\n    }\n    codeHash && setError(\"Invalid code hash value.\" /* InvalidHash */);\n  }, [codeHash]);\n  const set = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)((s) => {\n    setCodeHash(s || \"\");\n  }, []);\n  const resetState = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(() => {\n    setCodeHash(\"\");\n    setError(void 0);\n  }, []);\n  return {\n    codeHash,\n    resetState,\n    set,\n    error\n  };\n};\n\n// src/react/providers/api/context.ts\n\nvar APIContext = (0,react__WEBPACK_IMPORTED_MODULE_4__.createContext)({\n  apis: {}\n});\n\n// src/react/providers/api/reducer.ts\nfunction apiProvidersReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_API_PROVIDER\":\n      return {\n        ...state,\n        [action.chainId]: action.apiProvider\n      };\n  }\n}\n\n// src/react/providers/api/provider.tsx\n\nvar APIProvider = ({\n  children\n}) => {\n  const chains = useChains();\n  const { chainRpcs } = useConfig();\n  const [apis, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useReducer)(apiProvidersReducer, {});\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    chains.forEach((chain) => {\n      const provider = new _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.WsProvider(chainRpcs[chain.id] || chain.rpcs[0]);\n      _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiPromise.create({ provider }).then((api) => {\n        dispatch({\n          type: \"ADD_API_PROVIDER\",\n          chainId: chain.id,\n          apiProvider: { api, provider }\n        });\n      });\n    });\n  }, [chains, chainRpcs]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(APIContext.Provider, { value: { apis } }, children);\n};\n\n// src/react/hooks/substrate/useApi.ts\n\nvar useApis = () => (0,react__WEBPACK_IMPORTED_MODULE_4__.useContext)(APIContext);\nvar useApi = (chainId) => {\n  const defaultChain = useChain();\n  const idOrDefault = chainId || defaultChain?.id;\n  return idOrDefault ? useApis()?.apis?.[idOrDefault] : void 0;\n};\n\n// src/react/hooks/contracts/useContract.ts\n\nfunction useContract(address, metadata, chainId) {\n  const [contract, setContract] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const chainConfig = useChain(chainId);\n  const { api } = useApi(chainConfig?.id) || {};\n  const abi = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(\n    () => api && new _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.Abi(metadata, api.registry.getChainProperties()),\n    [api]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    try {\n      api && abi && setContract(new _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.ContractPromise(api, abi, address));\n    } catch (err) {\n      console.error(\"Couldn't create contract instance: \", err);\n    }\n  }, [abi, address, api]);\n  return chainConfig && contract ? { chainId: chainConfig.id, contract } : void 0;\n}\n\n// src/react/hooks/contracts/useTxEvents.ts\n\nvar useTxEvents = (tx) => {\n  const [events, setEvents] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)([]);\n  const resetState = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(() => setEvents([]), []);\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    if (!(0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.isInBlock)(tx) || !tx.result)\n      return;\n    setEvents([...tx.result.events]);\n  }, [tx.status]);\n  return { events, resetState };\n};\n\n// src/react/hooks/contracts/useDeployer/types.ts\nvar DeployerError = /* @__PURE__ */ ((DeployerError2) => {\n  DeployerError2[\"NoCodeHashOrWasm\"] = \"You must supply either a code hash or metadata containing Wasm.\";\n  DeployerError2[\"ConstructorNotFound\"] = \"The constructor method was not found.\";\n  DeployerError2[\"InstantiateNotSupportedForApi\"] = \"Instantiate method not found for chain API\";\n  DeployerError2[\"CouldNotCreateTx\"] = \"Could not create deploy transaction function\";\n  DeployerError2[\"TransactionFailed\"] = \"Transaction failed.\";\n  DeployerError2[\"TransactionCancelled\"] = \"Transaction cancelled.\";\n  DeployerError2[\"WalletNotConnected\"] = \"Wallet not connected.\";\n  DeployerError2[\"ApiInstanceNotFound\"] = \"Api client not found. Try refreshing the page.\";\n  DeployerError2[\"InvalidCodeHash\"] = \"Invalid code hash.\";\n  return DeployerError2;\n})(DeployerError || {});\n\n// src/react/hooks/contracts/useDeployer/useDeployer.ts\n\nfunction useDeployer(chainId) {\n  const { account } = useWallet();\n  const chainApi = useApi(chainId);\n  const chain = useChain(chainId);\n  const C = useConfig();\n  const [isSubmitting, setIsSubmitting] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n  const [willBeSuccessful, setWillBeSuccessful] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n  const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\"None\");\n  const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const [contractAddress, setContractAddress] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const [gasConsumed, setGasConsumed] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const [gasRequired, setGasRequired] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const [storageDeposit, setStorageDeposit] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const txEvents = useTxEvents({ status, result });\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    txEvents.events.forEach((event) => {\n      const failure = (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.formatExtrinsicFailed)(event, chainApi?.api);\n      failure && setError(failure);\n    });\n  }, [txEvents]);\n  const wasDeployed = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(\n    () => Boolean(txEvents.events.find(_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.isContractInstantiatedEvent)),\n    [txEvents.events]\n  );\n  const resetState = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(() => {\n    setResult(void 0);\n    setError(void 0);\n    setContractAddress(void 0);\n    setStatus(\"None\");\n    setIsSubmitting(false);\n    setGasConsumed(void 0);\n    setGasRequired(void 0);\n    setStorageDeposit(void 0);\n    txEvents.resetState();\n  }, []);\n  const dryRun = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(\n    () => async (abi, constructorName, constructorParams, options, cb = _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.NOOP) => {\n      if (!chainApi?.api) {\n        setError(\"Api client not found. Try refreshing the page.\" /* ApiInstanceNotFound */);\n        return;\n      }\n      setError(void 0);\n      const constructorMessage = constructorName ? abi.constructors.find(({ method }) => method === constructorName) : abi.constructors?.[0];\n      if (!constructorMessage) {\n        setError(\"The constructor method was not found.\" /* ConstructorNotFound */);\n        return;\n      }\n      const { codeHash } = (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.toDeployOptions)(options);\n      const wasm = abi.info.source.wasm;\n      const hasCodeHashOrWasm = codeHash !== void 0 || !!wasm;\n      if (!hasCodeHashOrWasm) {\n        setError(\"You must supply either a code hash or metadata containing Wasm.\" /* NoCodeHashOrWasm */);\n        return;\n      }\n      if (codeHash !== void 0 && !(0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.isValidHash)(codeHash, 64)) {\n        setError(\"Invalid code hash.\" /* InvalidCodeHash */);\n        return;\n      }\n      const code = codeHash ? new _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.BlueprintPromise(chainApi.api, abi, codeHash) : new _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.CodePromise(chainApi.api, abi, wasm.toU8a());\n      const abiParams = constructorMessage.args;\n      if (!chainApi?.api?.call?.contractsApi?.instantiate) {\n        setError(\"Instantiate method not found for chain API\" /* InstantiateNotSupportedForApi */);\n        return;\n      }\n      const messageParams = (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.toMessageParams)(\n        chainApi.api,\n        abiParams,\n        constructorParams || {}\n      );\n      const caller = account?.address || (chain?.id ? C?.caller?.[chain?.id] : C.caller?.default);\n      const gasLimitMax = null;\n      const storageDepositMax = null;\n      const payableValue = chainApi.api.registry.createType(\n        \"Balance\",\n        (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.toDeployOptions)(options).value\n      );\n      const params = [\n        caller,\n        payableValue,\n        gasLimitMax,\n        storageDepositMax,\n        codeHash ? { Existing: codeHash } : { Upload: abi.info.source.wasm },\n        constructorMessage.toU8a(messageParams),\n        options?.salt ? (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.encodeSalt)(options?.salt) : \"\"\n      ];\n      setIsSubmitting(true);\n      let res;\n      try {\n        res = await chainApi.api.call.contractsApi.instantiate(...params);\n        setIsSubmitting(false);\n      } catch (e) {\n        setError(e?.toString());\n        setIsSubmitting(false);\n        return;\n      }\n      setWillBeSuccessful(res.result.isOk);\n      if (res.result.isOk) {\n        setContractAddress(res.result.asOk.accountId.toString());\n      } else {\n        setError(\n          (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.decodeError)(res.result.asErr, { contract: { api: chainApi.api } })\n        );\n        return;\n      }\n      setGasConsumed(res.gasConsumed);\n      setGasRequired(res.gasRequired);\n      setStorageDeposit(res.storageDeposit);\n      let tx;\n      try {\n        const method = code.tx[constructorMessage.method];\n        const methodOptions = {\n          gasLimit: res.gasRequired,\n          storageDepositLimit: res.storageDeposit.asCharge || null,\n          ...(0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.toDeployOptions)(options)\n        };\n        tx = constructorMessage.args.length > 0 ? method?.(methodOptions, ...messageParams) : method?.(methodOptions);\n      } catch (e) {\n        setError(e?.toString());\n        return;\n      }\n      if (!tx) {\n        cb?.(void 0, chainApi.api, \"Could not create deploy transaction function\" /* CouldNotCreateTx */);\n        setError(\"Could not create deploy transaction function\" /* CouldNotCreateTx */);\n        return;\n      }\n      return tx;\n    },\n    [account, chainApi?.api]\n  );\n  const signAndSend = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(\n    () => async (abi, constructorName, constructorArgs = {}, options = { value: _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.BN_ZERO }, cb = _chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.NOOP) => {\n      if (!account || !account?.wallet?.extension.signer) {\n        setError(\"Wallet not connected.\" /* WalletNotConnected */);\n        return;\n      }\n      if (!chainApi?.api) {\n        setError(\"Api client not found. Try refreshing the page.\" /* ApiInstanceNotFound */);\n        return;\n      }\n      txEvents.resetState();\n      dryRun(abi, constructorName, constructorArgs, options, cb).then(\n        (tx) => {\n          tx && setStatus(\"PendingSignature\");\n          tx?.signAndSend(\n            account?.address,\n            { signer: account?.wallet?.extension.signer },\n            (response) => {\n              if (response.status.isInBlock) {\n                setContractAddress(response?.contract?.address.toString());\n              }\n              if (response.isError) {\n                const err = (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.decodeError)(response.dispatchError, {\n                  contract: { api: chainApi.api }\n                });\n                setError(err);\n              }\n              setStatus(response.status.type);\n              setResult(response);\n              cb?.(response, chainApi.api);\n            }\n          ).catch((e) => {\n            cb?.(void 0, chainApi.api, e);\n            setStatus(\"None\");\n            if ((0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.isTxCancelledError)(e)) {\n              setError(\"Transaction cancelled.\" /* TransactionCancelled */);\n              return;\n            }\n            setError(\"Transaction failed.\" /* TransactionFailed */);\n          }).finally(() => {\n            setIsSubmitting(false);\n          });\n        }\n      );\n    },\n    [account, account?.wallet?.extension?.signer, chainApi?.api]\n  );\n  return {\n    dryRun,\n    signAndSend,\n    contractAddress,\n    status,\n    result,\n    isSubmitting,\n    error,\n    resetState,\n    willBeSuccessful,\n    wasDeployed,\n    storageDeposit,\n    gasConsumed,\n    gasRequired,\n    events: txEvents.events\n  };\n}\n\n// src/react/hooks/contracts/useDryRun.ts\n\nfunction useDryRun(chainContract, message) {\n  const { account } = useWallet();\n  const defaultCaller = useDefaultCaller(chainContract?.chainId);\n  const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const [isSubmitting, setIsSubmitting] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n  const abiMessage = useAbiMessage(chainContract?.contract, message);\n  const send = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(\n    () => async (params, options) => {\n      const tx = chainContract?.contract?.tx?.[message];\n      const caller = account?.address ? account.address : options?.defaultCaller ? defaultCaller : void 0;\n      if (!caller || !chainContract?.contract || !abiMessage || !tx) {\n        return;\n      }\n      setIsSubmitting(true);\n      try {\n        const resp = await (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.call)(\n          chainContract.contract,\n          abiMessage,\n          caller,\n          params,\n          options\n        );\n        if (!resp || !resp.ok)\n          return;\n        const { gasConsumed, gasRequired, storageDeposit } = resp.value.raw;\n        const requiresNoArguments = tx.meta.args.length === 0;\n        const { partialFee } = await (requiresNoArguments ? tx((0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.toContractOptions)(options)) : tx((0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.toContractOptions)(options), ...params || [])).paymentInfo(caller);\n        const r = {\n          ...resp,\n          value: {\n            ...resp.value,\n            gasRequired,\n            gasConsumed,\n            storageDeposit,\n            partialFee\n          }\n        };\n        setIsSubmitting(false);\n        setResult(r);\n        return r;\n      } catch (e) {\n        console.error(e);\n        setIsSubmitting(false);\n        return;\n      }\n    },\n    [account, chainContract?.contract, abiMessage]\n  );\n  return {\n    send,\n    isSubmitting,\n    result,\n    resolved: Boolean(result && !isSubmitting),\n    resetState: () => {\n      setIsSubmitting(false);\n      setResult(void 0);\n    }\n  };\n}\n\n// src/react/providers/events/model.ts\nvar DEFAULT_EVENTS = {};\n\n// src/react/providers/events/context.ts\n\nvar EventsContext = (0,react__WEBPACK_IMPORTED_MODULE_4__.createContext)({\n  events: DEFAULT_EVENTS,\n  addEvent: () => null,\n  removeEvent: () => null\n});\n\n// src/react/providers/events/reducer.ts\nfunction eventsReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_EVENT\":\n      return {\n        ...state,\n        [action.address]: [...state[action.address] || [], action.event]\n      };\n    case \"REMOVE_EVENT\": {\n      const events = state[action.address];\n      if (!events)\n        return state;\n      const idx = events.findIndex((e) => e.id === action.eventId);\n      if (idx < 0)\n        return state;\n      const newContractState = [\n        ...events.slice(0, idx),\n        ...events.slice(idx + 1, events.length)\n      ];\n      return {\n        ...state,\n        [action.address]: newContractState\n      };\n    }\n  }\n}\n\n// src/react/providers/events/provider.tsx\n\nvar EventsProvider = ({\n  children\n}) => {\n  const [events, dispatch] = react__WEBPACK_IMPORTED_MODULE_4__.useReducer(eventsReducer, DEFAULT_EVENTS);\n  const isMounted = (0,_chunk_ABVRVYC3_mjs__WEBPACK_IMPORTED_MODULE_1__.useIsMounted)();\n  const addEvent = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    ({ event, address }) => {\n      if (isMounted()) {\n        dispatch({\n          type: \"ADD_EVENT\",\n          address,\n          event: { ...event, id: (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.pseudoRandomId)(), createdAt: Date.now() }\n        });\n      }\n    },\n    [dispatch]\n  );\n  const removeEvent = react__WEBPACK_IMPORTED_MODULE_4__.useCallback(\n    ({ eventId, address }) => {\n      if (isMounted()) {\n        dispatch({\n          type: \"REMOVE_EVENT\",\n          address,\n          eventId\n        });\n      }\n    },\n    [dispatch]\n  );\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n    EventsContext.Provider,\n    {\n      value: { addEvent, events, removeEvent },\n      children\n    }\n  );\n};\n\n// src/react/hooks/contracts/useEventSubscription.ts\n\nvar useEventSubscription = (chainContract) => {\n  const { events, addEvent, removeEvent } = (0,react__WEBPACK_IMPORTED_MODULE_4__.useContext)(EventsContext);\n  const { blockNumber, header } = useBlockHeader(chainContract?.chainId) || {};\n  const C = useConfig();\n  const address = chainContract?.contract?.address?.toString() || \"\";\n  const contractEvents = events?.[address] || [];\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    const contract = chainContract?.contract;\n    if (!header?.hash || !contract)\n      return;\n    contract.api.at(header?.hash).then((apiAt) => {\n      apiAt.query.system?.events?.((encodedEvent) => {\n        encodedEvent.forEach(({ event }) => {\n          if (contract.api.events.contracts?.ContractEmitted?.is(event)) {\n            const [contractAddress, contractEvent] = event.data;\n            if (!address || !contractAddress || !contractEvent || contractAddress.toString().toLowerCase() !== address.toLowerCase())\n              return;\n            try {\n              const decodedEvent = contract.abi.decodeEvent(\n                contractEvent\n              );\n              const eventItem = {\n                address,\n                event: {\n                  name: decodedEvent.event.identifier,\n                  args: decodedEvent.args.map((v) => v.toHuman())\n                }\n              };\n              addEvent(eventItem);\n            } catch (e) {\n              console.error(e);\n            }\n          }\n        });\n      });\n    });\n  }, [chainContract?.contract, blockNumber]);\n  (0,_chunk_ABVRVYC3_mjs__WEBPACK_IMPORTED_MODULE_1__.useInterval)(() => {\n    if (C.events?.expiration === 0)\n      return;\n    const expiredEvents = (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.getExpiredItem)(\n      contractEvents,\n      C.events?.expiration || _chunk_ABVRVYC3_mjs__WEBPACK_IMPORTED_MODULE_1__.FIVE_SECONDS\n    );\n    for (const event of expiredEvents) {\n      removeEvent({ eventId: event.id, address });\n    }\n  }, C.events?.checkInterval || _chunk_ABVRVYC3_mjs__WEBPACK_IMPORTED_MODULE_1__.HALF_A_SECOND);\n};\n\n// src/react/hooks/contracts/useEvents.ts\n\nvar useEvents = (contractAddress, filters) => {\n  const { events, removeEvent } = (0,react__WEBPACK_IMPORTED_MODULE_4__.useContext)(EventsContext);\n  const contractEvents = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(() => {\n    if (!contractAddress)\n      return [];\n    return events[contractAddress.toString()]?.filter(\n      ({ name }) => filters ? filters.includes(name) : true\n    ) ?? [];\n  }, [events, contractAddress]);\n  return { events: contractEvents, removeEvent };\n};\n\n// src/react/hooks/contracts/useMetadata.ts\n\nvar utf8decoder = new TextDecoder();\nvar formatName = (n) => n.replace(\".contract\", \"\").replace(\".json\", \"\").split(\"_\").join(\" \");\nfunction useMetadata(options = { requireWasm: true }, initialValue, chainId) {\n  const chainApi = useApi(chainId);\n  const { requireWasm } = options;\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\n    () => (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.jsonToAbi)({ ...options }, initialValue, chainApi?.api)\n  );\n  function set(file) {\n    (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.toBasicMetadata)(file).then((basicFile) => {\n      const json = JSON.parse(utf8decoder.decode(basicFile.data));\n      const newState = (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.jsonToAbi)(\n        {\n          requireWasm,\n          name: formatName(basicFile.name),\n          size: basicFile.size\n        },\n        json,\n        chainApi?.api\n      );\n      if (newState.error) {\n        setState({\n          ..._chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.DEFAULT,\n          error: newState.error\n        });\n        return;\n      }\n      setState(newState);\n    }).catch((_) => {\n      setState({\n        ..._chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.DEFAULT,\n        error: \"Invalid file.\" /* InvalidFile */\n      });\n    });\n  }\n  function clear() {\n    setState(_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.DEFAULT);\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    setState(\n      (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.jsonToAbi)({ requireWasm }, initialValue, chainApi?.api)\n    );\n  }, [chainApi?.api, initialValue, requireWasm]);\n  return {\n    ...state,\n    set,\n    clear\n  };\n}\n\n// src/react/hooks/contracts/useSalter.ts\n\nvar SalterError = /* @__PURE__ */ ((SalterError2) => {\n  SalterError2[\"InvalidHash\"] = \"Invalid salt hash value.\";\n  return SalterError2;\n})(SalterError || {});\nvar useSalter = () => {\n  const [salt, setSalt] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)((0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.pseudoRandomHex)());\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    if ((0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.isValidHash)(salt)) {\n      error && setError(void 0);\n      return;\n    }\n    setError(\"Invalid salt hash value.\" /* InvalidHash */);\n  }, [salt]);\n  const regenerate = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(() => {\n    const s = (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.pseudoRandomHex)();\n    setSalt(s);\n  }, []);\n  const set = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)((s) => {\n    setSalt(s);\n  }, []);\n  const resetState = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(() => {\n    setSalt(\"\");\n    setError(void 0);\n  }, []);\n  return {\n    salt,\n    resetState,\n    regenerate,\n    set,\n    error\n  };\n};\n\n// src/react/hooks/contracts/useTx.ts\n\nfunction useTx(chainContract, message) {\n  const { account } = useWallet();\n  const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\"None\");\n  const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const dryRun = useDryRun(chainContract, message);\n  const txEvents = useTxEvents({ status, result });\n  const signAndSend = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(\n    () => (params, options, cb) => {\n      if (!chainContract?.contract || !account || !account.wallet?.extension) {\n        return;\n      }\n      dryRun.send(params, options).then((response) => {\n        if (!response || !response.ok)\n          return;\n        setStatus(\"PendingSignature\");\n        const { gasRequired } = response.value.raw;\n        const tx = chainContract?.contract.tx[message];\n        if (!tx) {\n          cb?.(\n            void 0,\n            chainContract.contract.api,\n            `'${message}' not found on contract instance`\n          );\n          return;\n        }\n        tx(\n          { gasLimit: gasRequired, ...(0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.toContractOptions)(options) },\n          ...params || []\n        ).signAndSend(\n          account.address,\n          { signer: account.wallet?.extension?.signer },\n          (response2) => {\n            setResult(response2);\n            setStatus(response2.status.type);\n            cb?.(response2, chainContract?.contract.api);\n          }\n        ).catch((e) => {\n          cb?.(void 0, chainContract.contract.api, e);\n          setStatus(\"None\");\n        });\n      }).catch((e) => {\n        cb?.(void 0, chainContract.contract.api, e);\n        setStatus(\"None\");\n      });\n    },\n    [account, account?.wallet?.extension?.signer, chainContract?.contract]\n  );\n  return {\n    signAndSend,\n    status,\n    result,\n    resetState: () => {\n      setResult(void 0);\n      setStatus(\"None\");\n      txEvents.resetState();\n    },\n    events: txEvents.events\n  };\n}\n\n// src/react/hooks/contracts/useTxPaymentInfo.ts\n\nfunction useTxPaymentInfo(chainContract, message) {\n  const [isSubmitting, setIsSubmitting] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n  const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const { account } = useWallet();\n  const defaultCaller = useDefaultCaller();\n  const send = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(\n    async (params, options, signerOptions) => {\n      const caller = account?.address || options?.defaultCaller ? defaultCaller : void 0;\n      if (!chainContract?.contract || !caller)\n        return;\n      try {\n        setIsSubmitting(true);\n        const paymentInfoResult = await (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.txPaymentInfo)(\n          chainContract.contract,\n          message,\n          caller,\n          params,\n          options,\n          signerOptions\n        );\n        setResult(paymentInfoResult);\n        setIsSubmitting(false);\n        return paymentInfoResult;\n      } catch (e) {\n        console.error(e);\n        setIsSubmitting(false);\n        return;\n      }\n    },\n    [chainContract?.contract, message, account, defaultCaller]\n  );\n  return {\n    isSubmitting,\n    resolved: Boolean(!isSubmitting && result),\n    result,\n    send\n  };\n}\n\n// src/react/hooks/helpers/useUnixMilliToDate.ts\n\nvar useUnixMilliToDate = (unixInMilliSeconds) => (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(() => (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.unixMilliToDate)(unixInMilliSeconds), [unixInMilliSeconds]);\n\n// src/react/hooks/substrate/balance/useBalance.ts\n\nvar useBalance = (account, chainId) => {\n  const [balance, setBalance] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const { blockNumber } = useBlockHeader(chainId) || {};\n  const chainConfig = useChain(chainId);\n  const chain = useApi(chainConfig?.id);\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    if (!chain?.api || !account || !account.address)\n      return;\n    (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.getBalance)(chain.api, account).then(setBalance).catch(console.error);\n  }, [blockNumber, account]);\n  return balance;\n};\n\n// src/react/hooks/substrate/timestamp/useTimestampNow.ts\n\nvar useTimestampNow = (chainId) => {\n  const [now, setNow] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const b = useBlockHeader(chainId);\n  const chainApi = useApi(chainId);\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.getTimestampUnix)(chainApi?.api).then(setNow).catch();\n  }, [b?.blockNumber]);\n  return now;\n};\n\n// src/react/hooks/substrate/timestamp/useTimestampDate.ts\nvar useTimestampDate = (chainId) => {\n  const unix = useTimestampNow(chainId);\n  return useUnixMilliToDate(unix);\n};\n\n// src/react/hooks/substrate/timestamp/useTimestampQuery.ts\n\nvar useTimestampQuery = (chainId) => {\n  const chainApi = useApi(chainId);\n  const [timestamp, setTimestamp] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    const t = (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.getTimestampQuery)(chainApi?.api);\n    setTimestamp(t);\n  }, [chainApi?.api]);\n  return timestamp;\n};\n\n// src/react/hooks/substrate/useChainDecimals.ts\nvar useChainDecimals = (chainId) => {\n  const chainApi = useApi(chainId);\n  if (!chainApi?.api)\n    return void 0;\n  return (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.chainDecimals)(chainApi?.api);\n};\n\n// src/react/hooks/substrate/useTokenSymbol.ts\nvar useTokenSymbol = (chainId) => {\n  const chainApi = useApi(chainId);\n  if (!chainApi?.api)\n    return void 0;\n  return (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.chainTokenSymbol)(chainApi?.api);\n};\n\n// src/react/hooks/substrate/useTransfer.ts\n\nvar useTransfer = (chainId) => {\n  const [hash, setHash] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)();\n  const [isSubmitting, setIsSubmitting] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(false);\n  const { account } = useWallet();\n  const chainConfig = useChain(chainId);\n  const chain = useApi(chainConfig?.id);\n  const resetState = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)(() => {\n    setHash(void 0);\n    setError(void 0);\n  }, []);\n  const signAndSend = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(\n    () => (to, amount, options) => {\n      if (!chain?.api || !account || !account.address || !account.wallet) {\n        return;\n      }\n      setIsSubmitting(true);\n      (0,_chunk_NLX3WHD4_mjs__WEBPACK_IMPORTED_MODULE_2__.transfer)(chain.api, to, amount, account?.wallet.extension.signer, options).then(setHash).catch(setError).finally(() => setIsSubmitting(false));\n    },\n    [chain?.api, account?.address]\n  );\n  return { signAndSend, error, hash, resetState, isSubmitting };\n};\n\n// src/react/hooks/wallets/useAllWallets.ts\n\nvar useAllWallets = () => {\n  const { getWallets: getWallets2 } = useWallet();\n  return (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(() => getWallets2(), []);\n};\n\n// src/react/hooks/wallets/useInstalledWallets.ts\n\nvar useInstalledWallets = () => {\n  const { getWallets: getWallets2 } = useWallet();\n  return (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(() => getWallets2().filter((w) => w.installed), []);\n};\n\n// src/react/hooks/wallets/useUninstalledWallets.ts\n\nvar useUninstalledWallets = () => {\n  const { getWallets: getWallets2 } = useWallet();\n  return (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(() => getWallets2().filter((w) => !w.installed), []);\n};\n\n// src/react/providers/config/provider.tsx\n\nvar toInitialRpcs = (c, _rpcs) => c.reduce(\n  (acc, ch) => ({ ...acc, [ch.id]: ch.rpcs?.[0] || \"\" }),\n  {}\n);\nvar ConfigProvider = ({\n  config,\n  children\n}) => {\n  const defaultChainId = (0,react__WEBPACK_IMPORTED_MODULE_4__.useMemo)(() => config.chains[0].id, [config.chains[0]]);\n  const [chainRpcs, setChainRpcs] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\n    toInitialRpcs(config.chains, {})\n  );\n  const setChainRpc = (0,react__WEBPACK_IMPORTED_MODULE_4__.useCallback)((rpc, cid) => {\n    const chainIdOrDefault = cid || defaultChainId;\n    chainIdOrDefault && setChainRpcs({ ...chainRpcs, [chainIdOrDefault]: rpc });\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_4__.useEffect)(() => {\n    setChainRpcs(toInitialRpcs(config.chains, chainRpcs));\n    if (!config.chains.length) {\n      const error = \"Chains not configured in Config Provider\";\n      console.error(error);\n      throw Error(error);\n    }\n  }, [config.chains]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(\n    ConfigContext.Provider,\n    {\n      value: {\n        ...DEFAULT_CONFIG,\n        ...config,\n        setChainRpc,\n        chainRpcs\n      },\n      children\n    }\n  );\n};\n\n// src/react/providers/UseInkProvider.tsx\n\nvar UseInkProvider = ({\n  children,\n  config\n}) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(ConfigProvider, { config }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(WalletProvider, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(APIProvider, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(BlockHeaderProvider, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_4__.createElement(EventsProvider, null, children)))));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXNlaW5rL2Rpc3QvaW5kZXgubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUU4QjtBQU1BO0FBc0NBO0FBQ0E7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsdUVBQXNCO0FBQ2pDO0FBQ0EsZ0JBQWdCLDZEQUFZO0FBQzVCLG1CQUFtQiw4REFBYTtBQUNoQyxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQzBCO0FBQzFCLG9CQUFvQixnREFBbUI7QUFDdkM7QUFDQTs7QUFFQTtBQUNtQztBQUNuQyxzQkFBc0IsaURBQVU7O0FBRWhDO0FBQ2dDO0FBQ2hDO0FBQ0EsVUFBVSxTQUFTO0FBQ25CLFNBQVMsOENBQU87QUFDaEI7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBLFVBQVUsWUFBWTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGNBQWM7QUFDeEIsV0FBVztBQUNYOztBQUVBO0FBQ0E7O0FBRUE7QUFDNEM7QUFDNUM7QUFDQSxVQUFVLFNBQVM7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsU0FBUyw4Q0FBUTtBQUNqQixvQkFBb0Isd0JBQXdCO0FBQzVDO0FBQ0E7QUFDQTs7QUFFQTtBQUM0QztBQUM1QztBQUNBLHFCQUFxQiw4Q0FBUTtBQUM3QjtBQUNBO0FBQ0EsV0FBVyx5RUFBb0I7QUFDL0IsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1osbUJBQW1CO0FBQ25COztBQUVBO0FBQ3NDO0FBQ3RDLG9CQUFvQixvREFBYTtBQUNqQztBQUNBLENBQUM7O0FBRUQ7QUFDc0Y7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFD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QSxxQkFBcUIsa0RBQVk7QUFDakM7QUFDQTtBQUNBLEdBQUc7QUFDSCxzQkFBc0IsOENBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNkRBQVE7QUFDZCxLQUFLO0FBQ0w7QUFDQTtBQUNBLFdBQVc7QUFDWDs7QUFFQTtBQUM2QztBQUM3QztBQUNBLFVBQVUsMEJBQTBCO0FBQ3BDLFNBQVMsOENBQVM7QUFDbEI7O0FBRUE7QUFDNkM7QUFDN0M7QUFDQSxVQUFVLDBCQUEwQjtBQUNwQyxTQUFTLDhDQUFTO0FBQ2xCOztBQUVBO0FBQzZDO0FBQzdDO0FBQ0EsVUFBVSwwQkFBMEI7QUFDcEMsU0FBUyw4Q0FBUztBQUNsQjs7QUFFQTtBQUNvSTtBQUNwSTtBQUNBLGtCQUFrQixxQ0FBcUM7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx5QkFBeUIsOENBQVM7QUFDbEMsb0NBQW9DLCtDQUFVO0FBQzlDLG1DQUFtQztBQUNuQztBQUNBLHNCQUFzQixrREFBWTtBQUNsQztBQUNBLHVDQUF1Qyx1Q0FBdUM7QUFDOUUsR0FBRztBQUNILEVBQUUsZ0RBQVc7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gseUJBQXlCLGdEQUFvQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUMyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxDQUFDLHFCQUFxQixnREFBb0IsbUJBQW1CLFFBQVEsa0JBQWtCLGdEQUFvQix1Q0FBdUMsZ0RBQW9CLG9DQUFvQyxnREFBb0IsNENBQTRDLGdEQUFvQjtBQTZDNVIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VzZWluay9kaXN0L2luZGV4Lm1qcz80NjcyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIFJvY29jb0NvbnRyYWN0c1Rlc3RuZXRcbn0gZnJvbSBcIi4vY2h1bmstVVNQUkFSSVMubWpzXCI7XG5pbXBvcnQge1xuICBGSVZFX1NFQ09ORFMsXG4gIEhBTEZfQV9TRUNPTkQsXG4gIHVzZUludGVydmFsLFxuICB1c2VJc01vdW50ZWRcbn0gZnJvbSBcIi4vY2h1bmstQUJWUlZZQzMubWpzXCI7XG5pbXBvcnQge1xuICBBYmksXG4gIEFwaVByb21pc2UsXG4gIEJOX1pFUk8sXG4gIEJsdWVwcmludFByb21pc2UsXG4gIENvZGVQcm9taXNlLFxuICBDb250cmFjdFByb21pc2UsXG4gIERFRkFVTFQsXG4gIE5PT1AsXG4gIFdzUHJvdmlkZXIsXG4gIGNhbGwsXG4gIGNoYWluRGVjaW1hbHMsXG4gIGNoYWluVG9rZW5TeW1ib2wsXG4gIGRlY29kZUVycm9yLFxuICBlbmNvZGVTYWx0LFxuICBmb3JtYXRFeHRyaW5zaWNGYWlsZWQsXG4gIGdldEJhbGFuY2UsXG4gIGdldEV4cGlyZWRJdGVtLFxuICBnZXRUaW1lc3RhbXBRdWVyeSxcbiAgZ2V0VGltZXN0YW1wVW5peCxcbiAgZ2V0V2FsbGV0QnlTb3VyY2UsXG4gIGdldFdhbGxldHMsXG4gIGlzQ29udHJhY3RJbnN0YW50aWF0ZWRFdmVudCxcbiAgaXNJbkJsb2NrLFxuICBpc1R4Q2FuY2VsbGVkRXJyb3IsXG4gIGlzVmFsaWRIYXNoLFxuICBqc29uVG9BYmksXG4gIHBzZXVkb1JhbmRvbUhleCxcbiAgcHNldWRvUmFuZG9tSWQsXG4gIHRvQmFzaWNNZXRhZGF0YSxcbiAgdG9Db250cmFjdEFiaU1lc3NhZ2UsXG4gIHRvQ29udHJhY3RPcHRpb25zLFxuICB0b0RlcGxveU9wdGlvbnMsXG4gIHRvTWVzc2FnZVBhcmFtcyxcbiAgdHJhbnNmZXIsXG4gIHR4UGF5bWVudEluZm8sXG4gIHVuaXhNaWxsaVRvRGF0ZVxufSBmcm9tIFwiLi9jaHVuay1OTFgzV0hENC5tanNcIjtcbmltcG9ydCBcIi4vY2h1bmstVVQ0M1RZSEsubWpzXCI7XG5cbi8vIHNyYy9yZWFjdC9wcm92aWRlcnMvY29uZmlnL21vZGVsLnRzXG52YXIgREVGQVVMVF9DT05GSUcgPSB7XG4gIGRhcHBOYW1lOiBcIkEgZGFwcCBidWlsdCB3aXRoIHVzZUluayFcIixcbiAgY2hhaW5zOiBbUm9jb2NvQ29udHJhY3RzVGVzdG5ldF0sXG4gIGV2ZW50czoge1xuICAgIGV4cGlyYXRpb246IEZJVkVfU0VDT05EUyxcbiAgICBjaGVja0ludGVydmFsOiBIQUxGX0FfU0VDT05EXG4gIH0sXG4gIHNldENoYWluUnBjOiAoKSA9PiBudWxsLFxuICBjaGFpblJwY3M6IHt9XG59O1xuXG4vLyBzcmMvcmVhY3QvcHJvdmlkZXJzL2NvbmZpZy9jb250ZXh0LnRzXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG52YXIgQ29uZmlnQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoXG4gIERFRkFVTFRfQ09ORklHXG4pO1xuXG4vLyBzcmMvcmVhY3QvaG9va3MvY29uZmlnL3VzZUNvbmZpZy50c1xuaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xudmFyIHVzZUNvbmZpZyA9ICgpID0+IHVzZUNvbnRleHQoQ29uZmlnQ29udGV4dCk7XG5cbi8vIHNyYy9yZWFjdC9ob29rcy9jb25maWcvdXNlQ2hhaW4udHNcbmltcG9ydCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIjtcbnZhciB1c2VDaGFpbiA9IChjaGFpbklkKSA9PiB7XG4gIGNvbnN0IHsgY2hhaW5zIH0gPSB1c2VDb25maWcoKTtcbiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiBjaGFpbklkID8gY2hhaW5zLmZpbmQoKGMpID0+IGMuaWQgPT09IGNoYWluSWQpIDogY2hhaW5zWzBdO1xuICB9LCBbY2hhaW5zLCBjaGFpbklkXSk7XG59O1xuXG4vLyBzcmMvcmVhY3QvaG9va3MvY29uZmlnL3VzZUNoYWluUnBjLnRzXG52YXIgdXNlQ2hhaW5ScGMgPSAoY2hhaW5JZCkgPT4ge1xuICBjb25zdCB7IGNoYWluUnBjcyB9ID0gdXNlQ29uZmlnKCk7XG4gIGNvbnN0IGNoYWluID0gdXNlQ2hhaW4oY2hhaW5JZCk7XG4gIGNvbnN0IGNoYWluSWRPckRlZmF1bHQgPSBjaGFpbklkIHx8IGNoYWluPy5pZDtcbiAgcmV0dXJuIGNoYWluSWRPckRlZmF1bHQgJiYgY2hhaW5ScGNzW2NoYWluSWRPckRlZmF1bHRdO1xufTtcblxuLy8gc3JjL3JlYWN0L2hvb2tzL2NvbmZpZy91c2VDaGFpblJwY0xpc3QudHNcbnZhciB1c2VDaGFpblJwY0xpc3QgPSAoY2hhaW5JZCkgPT4ge1xuICBjb25zdCBjaGFpbiA9IHVzZUNoYWluKGNoYWluSWQpO1xuICBjb25zdCB7IHNldENoYWluUnBjIH0gPSB1c2VDb25maWcoKTtcbiAgcmV0dXJuIHsgcnBjczogY2hhaW4/LnJwY3MgfHwgW10sIHNldENoYWluUnBjIH07XG59O1xuXG4vLyBzcmMvcmVhY3QvaG9va3MvY29uZmlnL3VzZUNoYWlucy50c1xudmFyIHVzZUNoYWlucyA9ICgpID0+IHVzZUNvbmZpZygpLmNoYWlucztcblxuLy8gc3JjL3JlYWN0L2hvb2tzL2NvbmZpZy91c2VEZWZhdWx0Q2FsbGVyLnRzXG5pbXBvcnQgeyB1c2VNZW1vIGFzIHVzZU1lbW8yIH0gZnJvbSBcInJlYWN0XCI7XG52YXIgdXNlRGVmYXVsdENhbGxlciA9IChjaGFpbklkKSA9PiB7XG4gIGNvbnN0IHsgY2FsbGVyIH0gPSB1c2VDb25maWcoKTtcbiAgY29uc3QgZGVmYXVsdENoYWluID0gdXNlQ2hhaW4oKTtcbiAgaWYgKCFjYWxsZXIpXG4gICAgcmV0dXJuO1xuICByZXR1cm4gdXNlTWVtbzIoXG4gICAgKCkgPT4gY2FsbGVyW2Ake2NoYWluSWQgfHwgZGVmYXVsdENoYWlufWBdIHx8IGNhbGxlci5kZWZhdWx0LFxuICAgIFtjaGFpbklkLCBjYWxsZXIsIGRlZmF1bHRDaGFpbl1cbiAgKTtcbn07XG5cbi8vIHNyYy9yZWFjdC9ob29rcy9jb250cmFjdHMvdXNlQWJpTWVzc2FnZS50c1xuaW1wb3J0IHsgdXNlTWVtbyBhcyB1c2VNZW1vMyB9IGZyb20gXCJyZWFjdFwiO1xuZnVuY3Rpb24gdXNlQWJpTWVzc2FnZShjb250cmFjdCwgbWVzc2FnZSkge1xuICBjb25zdCBhYmlNZXNzYWdlID0gdXNlTWVtbzMoKCkgPT4ge1xuICAgIGlmICghY29udHJhY3QpXG4gICAgICByZXR1cm47XG4gICAgcmV0dXJuIHRvQ29udHJhY3RBYmlNZXNzYWdlKGNvbnRyYWN0LCBtZXNzYWdlKTtcbiAgfSwgW2NvbnRyYWN0LCBtZXNzYWdlXSk7XG4gIGlmICghYWJpTWVzc2FnZSB8fCAhYWJpTWVzc2FnZS5vaylcbiAgICByZXR1cm47XG4gIHJldHVybiBhYmlNZXNzYWdlLnZhbHVlO1xufVxuXG4vLyBzcmMvcmVhY3QvcHJvdmlkZXJzL3dhbGxldC9tb2RlbC50c1xudmFyIFdBTExFVF9ERUZBVUxUUyA9IHtcbiAgY29ubmVjdDogKCkgPT4gdm9pZCAwLFxuICBkaXNjb25uZWN0OiAoKSA9PiB2b2lkIDAsXG4gIGFjY291bnQ6IHZvaWQgMCxcbiAgYWNjb3VudHM6IHZvaWQgMCxcbiAgc2V0QWNjb3VudDogKCkgPT4gdm9pZCAwLFxuICBpc0Nvbm5lY3RlZDogZmFsc2UsXG4gIGdldFdhbGxldHMsXG4gIGdldFdhbGxldEJ5U291cmNlXG59O1xuXG4vLyBzcmMvcmVhY3QvcHJvdmlkZXJzL3dhbGxldC9jb250ZXh0LnRzXG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSBcInJlYWN0XCI7XG52YXIgV2FsbGV0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoe1xuICAuLi5XQUxMRVRfREVGQVVMVFNcbn0pO1xuXG4vLyBzcmMvcmVhY3QvcHJvdmlkZXJzL3dhbGxldC9wcm92aWRlci50c3hcbmltcG9ydCBSZWFjdDIsIHsgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlTWVtbyBhcyB1c2VNZW1vNCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIGdldEF1dG9Db25uZWN0V2FsbGV0SW5mbyhrZXkpIHtcbiAgY29uc3QgaXRlbSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSk7XG4gIHJldHVybiBpdGVtID8gSlNPTi5wYXJzZShpdGVtKSA6IG51bGw7XG59XG5mdW5jdGlvbiBlbmFibGVBdXRvQ29ubmVjdChhLCBrZXkpIHtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeShhKSk7XG59XG5mdW5jdGlvbiBkaXNhYmxlQXV0b0Nvbm5lY3Qoa2V5KSB7XG4gIGlmIChnZXRBdXRvQ29ubmVjdFdhbGxldEluZm8oa2V5KSlcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xufVxudmFyIFdhbGxldFByb3ZpZGVyID0gKHtcbiAgY2hpbGRyZW5cbn0pID0+IHtcbiAgY29uc3QgQyA9IHVzZUNvbmZpZygpO1xuICBjb25zdCBbYWNjb3VudCwgc2V0V2FsbGV0QWNjb3VudF0gPSB1c2VTdGF0ZSgpO1xuICBjb25zdCBbYWNjb3VudHMsIHNldEFjY291bnRzXSA9IHVzZVN0YXRlKCk7XG4gIGNvbnN0IFt3YWxsZXRFcnJvciwgc2V0V2FsbGV0RXJyb3JdID0gdXNlU3RhdGUoKTtcbiAgY29uc3QgZGFwcE5hbWUgPSB1c2VNZW1vNChcbiAgICAoKSA9PiBDLmRhcHBOYW1lICYmIEMuZGFwcE5hbWUudHJpbSgpLmxlbmd0aCA+IDAgPyBDLmRhcHBOYW1lIDogXCJBIERhcHAgYnVpbHQgaW4gdXNlaW5rXCIsXG4gICAgW0MuZGFwcE5hbWVdXG4gICk7XG4gIGNvbnN0IFthY3RpdmVXYWxsZXQsIHNldEFjdGl2ZVdhbGxldF0gPSB1c2VTdGF0ZSgpO1xuICBjb25zdCBkaXNjb25uZWN0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGRpc2FibGVBdXRvQ29ubmVjdChkYXBwTmFtZSk7XG4gICAgc2V0QWNjb3VudHModm9pZCAwKTtcbiAgICBzZXRXYWxsZXRBY2NvdW50KHZvaWQgMCk7XG4gICAgc2V0QWN0aXZlV2FsbGV0KHZvaWQgMCk7XG4gICAgc2V0V2FsbGV0RXJyb3Iodm9pZCAwKTtcbiAgfSwgW2RhcHBOYW1lXSk7XG4gIGNvbnN0IHNldEFjY291bnQgPSB1c2VDYWxsYmFjayhcbiAgICAobmV3QWNjb3VudCkgPT4ge1xuICAgICAgY29uc3QgYWNjb3VudERpc2FibGVkID0gIWFjY291bnRzPy5maW5kKFxuICAgICAgICAoYSkgPT4gYS5hZGRyZXNzID09PSBuZXdBY2NvdW50LmFkZHJlc3NcbiAgICAgICk7XG4gICAgICBpZiAoYWNjb3VudERpc2FibGVkKSB7XG4gICAgICAgIHNldFdhbGxldEVycm9yKFwiQWNjb3VudE5vdEVuYWJsZWRcIiAvKiBBY2NvdW50RGlzYWJsZWQgKi8pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB3YWxsZXRFcnJvciAhPT0gdm9pZCAwICYmIHNldFdhbGxldEVycm9yKHZvaWQgMCk7XG4gICAgICBzZXRXYWxsZXRBY2NvdW50KG5ld0FjY291bnQpO1xuICAgICAgaWYgKCFDLndhbGxldD8uc2tpcEF1dG9Db25uZWN0KSB7XG4gICAgICAgIGVuYWJsZUF1dG9Db25uZWN0KFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGFkZHJlc3M6IG5ld0FjY291bnQuYWRkcmVzcyxcbiAgICAgICAgICAgIHdhbGxldDogbmV3QWNjb3VudC5zb3VyY2VcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhcHBOYW1lXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSxcbiAgICBbYWNjb3VudHMsIEMud2FsbGV0Py5za2lwQXV0b0Nvbm5lY3RdXG4gICk7XG4gIGNvbnN0IGNvbm5lY3RXYWxsZXQgPSB1c2VDYWxsYmFjayhcbiAgICBhc3luYyAod2FsbGV0TmFtZSkgPT4ge1xuICAgICAgd2FsbGV0RXJyb3IgJiYgc2V0V2FsbGV0RXJyb3Iodm9pZCAwKTtcbiAgICAgIGNvbnN0IHcgPSBnZXRXYWxsZXRCeVNvdXJjZSh3YWxsZXROYW1lKTtcbiAgICAgIGlmICghdykge1xuICAgICAgICBzZXRXYWxsZXRFcnJvcihcIldhbGxldE5vdEluc3RhbGxlZFwiIC8qIFdhbGxldE5vdEluc3RhbGxlZCAqLyk7XG4gICAgICAgIHNldEFjdGl2ZVdhbGxldCh2b2lkIDApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCB3LmVuYWJsZShkYXBwTmFtZSk7XG4gICAgICB9IGNhdGNoIChfZSkge1xuICAgICAgICBzZXRXYWxsZXRFcnJvcihcIkVuYWJsZUZhaWxlZFwiIC8qIEVuYWJsZUZhaWxlZCAqLyk7XG4gICAgICAgIHNldEFjdGl2ZVdhbGxldCh2b2lkIDApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCB1bnN1YiA9IGF3YWl0IHcuc3Vic2NyaWJlQWNjb3VudHMoKGFjY3RzKSA9PiB7XG4gICAgICAgIHNldEFjY291bnRzKGFjY3RzKTtcbiAgICAgICAgY29uc3QgZmlyc3RBY2NvdW50ID0gYWNjdHM/LlswXTtcbiAgICAgICAgY29uc3Qgbm9BY2NvdW50c0VuYWJsZWQgPSAhYWNjdHMgfHwgIWZpcnN0QWNjb3VudDtcbiAgICAgICAgaWYgKG5vQWNjb3VudHNFbmFibGVkKSB7XG4gICAgICAgICAgc2V0V2FsbGV0RXJyb3IoXCJOb0FjY291bnRzRW5hYmxlZFwiIC8qIE5vQWNjb3VudHNFbmFibGVkICovKTtcbiAgICAgICAgICBzZXRXYWxsZXRBY2NvdW50KHZvaWQgMCk7XG4gICAgICAgICAgZGlzYWJsZUF1dG9Db25uZWN0KGRhcHBOYW1lKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYWN0aXZlQWNjb3VudE5vTG9uZ2VyQ29ubmVjdGVkID0gYWNjb3VudCAmJiAhYWNjdHM/LmZpbmQoKGEpID0+IGEuYWRkcmVzcyA9PT0gYWNjb3VudD8uYWRkcmVzcyk7XG4gICAgICAgIGlmIChhY3RpdmVBY2NvdW50Tm9Mb25nZXJDb25uZWN0ZWQpIHtcbiAgICAgICAgICBzZXRXYWxsZXRBY2NvdW50KGZpcnN0QWNjb3VudCk7XG4gICAgICAgICAgaWYgKCFDLndhbGxldD8uc2tpcEF1dG9Db25uZWN0KSB7XG4gICAgICAgICAgICBlbmFibGVBdXRvQ29ubmVjdChcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGFkZHJlc3M6IGZpcnN0QWNjb3VudC5hZGRyZXNzLFxuICAgICAgICAgICAgICAgIHdhbGxldDogZmlyc3RBY2NvdW50LnNvdXJjZVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBkYXBwTmFtZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGF1dG9Db25uZWN0ID0gZ2V0QXV0b0Nvbm5lY3RXYWxsZXRJbmZvKGRhcHBOYW1lKTtcbiAgICAgICAgY29uc3QgYXV0b0Nvbm5lY3RBY2NvdW50ID0gYXV0b0Nvbm5lY3QgJiYgYWNjdHMuZmluZCgoYSkgPT4gYS5hZGRyZXNzID09PSBhdXRvQ29ubmVjdC5hZGRyZXNzKTtcbiAgICAgICAgY29uc3QgaW5pdGlhbEFjY291bnQgPSBhdXRvQ29ubmVjdEFjY291bnQgfHwgZmlyc3RBY2NvdW50O1xuICAgICAgICBzZXRXYWxsZXRBY2NvdW50KGluaXRpYWxBY2NvdW50KTtcbiAgICAgICAgaWYgKCFDLndhbGxldD8uc2tpcEF1dG9Db25uZWN0KSB7XG4gICAgICAgICAgZW5hYmxlQXV0b0Nvbm5lY3QoXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGFkZHJlc3M6IGluaXRpYWxBY2NvdW50LmFkZHJlc3MsXG4gICAgICAgICAgICAgIHdhbGxldDogaW5pdGlhbEFjY291bnQuc291cmNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGFwcE5hbWVcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiB1bnN1YjtcbiAgICB9LFxuICAgIFtdXG4gICk7XG4gIGNvbnN0IGNvbm5lY3QgPSB1c2VDYWxsYmFjaygod2FsbGV0TmFtZSkgPT4ge1xuICAgIHNldEFjdGl2ZVdhbGxldCh3YWxsZXROYW1lKTtcbiAgfSwgW10pO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghYWN0aXZlV2FsbGV0KSB7XG4gICAgICBjb25zdCB3YWxsZXQgPSBnZXRBdXRvQ29ubmVjdFdhbGxldEluZm8oZGFwcE5hbWUpPy53YWxsZXQ7XG4gICAgICBpZiAod2FsbGV0KVxuICAgICAgICBzZXRBY3RpdmVXYWxsZXQod2FsbGV0KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHVuc3ViRnVuYztcbiAgICBjb25uZWN0V2FsbGV0KGFjdGl2ZVdhbGxldCkudGhlbigodW5zdWIpID0+IHVuc3ViRnVuYyA9PT0gdW5zdWIpO1xuICAgIHJldHVybiAoKSA9PiB1bnN1YkZ1bmM/LigpO1xuICB9LCBbYWN0aXZlV2FsbGV0XSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QyLmNyZWF0ZUVsZW1lbnQoXG4gICAgV2FsbGV0Q29udGV4dC5Qcm92aWRlcixcbiAgICB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICBhY2NvdW50LFxuICAgICAgICBpc0Nvbm5lY3RlZDogQm9vbGVhbihhY2NvdW50KSxcbiAgICAgICAgYWNjb3VudHMsXG4gICAgICAgIGNvbm5lY3QsXG4gICAgICAgIGRpc2Nvbm5lY3QsXG4gICAgICAgIHdhbGxldEVycm9yLFxuICAgICAgICBzZXRBY2NvdW50LFxuICAgICAgICBnZXRXYWxsZXRzLFxuICAgICAgICBnZXRXYWxsZXRCeVNvdXJjZVxuICAgICAgfVxuICAgIH0sXG4gICAgY2hpbGRyZW5cbiAgKTtcbn07XG5cbi8vIHNyYy9yZWFjdC9ob29rcy93YWxsZXRzL3VzZVdhbGxldC50c1xuaW1wb3J0IHsgdXNlQ29udGV4dCBhcyB1c2VDb250ZXh0MiB9IGZyb20gXCJyZWFjdFwiO1xudmFyIHVzZVdhbGxldCA9ICgpID0+IHVzZUNvbnRleHQyKFdhbGxldENvbnRleHQpO1xuXG4vLyBzcmMvcmVhY3QvaG9va3MvY29udHJhY3RzL3VzZUNhbGwudHNcbmltcG9ydCB7IHVzZUNhbGxiYWNrIGFzIHVzZUNhbGxiYWNrMiwgdXNlU3RhdGUgYXMgdXNlU3RhdGUyIH0gZnJvbSBcInJlYWN0XCI7XG52YXIgQ2FsbEVycm9yID0gLyogQF9fUFVSRV9fICovICgoQ2FsbEVycm9yMikgPT4ge1xuICBDYWxsRXJyb3IyW1wiQ29udHJhY3RVbmRlZmluZWRcIl0gPSBcIkNvbnRyYWN0IGlzIHVuZGVmaW5lZFwiO1xuICBDYWxsRXJyb3IyW1wiSW52YWxpZEFiaU1lc3NhZ2VcIl0gPSBcIkludmFsaWQgQUJJIE1lc3NhZ2VcIjtcbiAgQ2FsbEVycm9yMltcIk5vUmVzcG9uc2VcIl0gPSBcIk5vIHJlc3BvbnNlXCI7XG4gIHJldHVybiBDYWxsRXJyb3IyO1xufSkoQ2FsbEVycm9yIHx8IHt9KTtcbmZ1bmN0aW9uIHVzZUNhbGwoY2hhaW5Db250cmFjdCwgbWVzc2FnZSkge1xuICBjb25zdCBbcmVzdWx0LCBzZXRSZXN1bHRdID0gdXNlU3RhdGUyKCk7XG4gIGNvbnN0IFtpc1N1Ym1pdHRpbmcsIHNldElzU3VibWl0dGluZ10gPSB1c2VTdGF0ZTIoZmFsc2UpO1xuICBjb25zdCBhYmlNZXNzYWdlID0gdXNlQWJpTWVzc2FnZShjaGFpbkNvbnRyYWN0Py5jb250cmFjdCwgbWVzc2FnZSk7XG4gIGNvbnN0IHsgYWNjb3VudCB9ID0gdXNlV2FsbGV0KCk7XG4gIGNvbnN0IGRlZmF1bHRDYWxsZXIgPSB1c2VEZWZhdWx0Q2FsbGVyKGNoYWluQ29udHJhY3Q/LmNoYWluSWQpO1xuICBjb25zdCBzZW5kID0gdXNlQ2FsbGJhY2syKFxuICAgIGFzeW5jIChhcmdzLCBvcHRpb25zKSA9PiB7XG4gICAgICBjb25zdCBjYWxsZXIgPSBhY2NvdW50Py5hZGRyZXNzID8gYWNjb3VudC5hZGRyZXNzIDogb3B0aW9ucz8uZGVmYXVsdENhbGxlciA/IGRlZmF1bHRDYWxsZXIgOiB2b2lkIDA7XG4gICAgICBpZiAoIWFiaU1lc3NhZ2UgfHwgIWNoYWluQ29udHJhY3Q/LmNvbnRyYWN0IHx8ICFjYWxsZXIpXG4gICAgICAgIHJldHVybjtcbiAgICAgIHRyeSB7XG4gICAgICAgIHNldElzU3VibWl0dGluZyh0cnVlKTtcbiAgICAgICAgY29uc3QgY2FsbFJlc3VsdCA9IGF3YWl0IGNhbGwoXG4gICAgICAgICAgY2hhaW5Db250cmFjdC5jb250cmFjdCxcbiAgICAgICAgICBhYmlNZXNzYWdlLFxuICAgICAgICAgIGNhbGxlcixcbiAgICAgICAgICBhcmdzLFxuICAgICAgICAgIG9wdGlvbnNcbiAgICAgICAgKTtcbiAgICAgICAgc2V0UmVzdWx0KGNhbGxSZXN1bHQpO1xuICAgICAgICBzZXRJc1N1Ym1pdHRpbmcoZmFsc2UpO1xuICAgICAgICByZXR1cm4gY2FsbFJlc3VsdDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgICAgc2V0SXNTdWJtaXR0aW5nKGZhbHNlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0sXG4gICAgW2FjY291bnQsIGFiaU1lc3NhZ2VdXG4gICk7XG4gIHJldHVybiB7IHNlbmQsIGlzU3VibWl0dGluZywgcmVzdWx0IH07XG59XG5cbi8vIHNyYy9yZWFjdC9wcm92aWRlcnMvYmxvY2tIZWFkZXIvbW9kZWwudHNcbnZhciBCTE9DS19IRUFERVJfREVGQVVMVFMgPSB7fTtcblxuLy8gc3JjL3JlYWN0L3Byb3ZpZGVycy9ibG9ja0hlYWRlci9jb250ZXh0LnRzXG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0IGFzIGNyZWF0ZUNvbnRleHQyIH0gZnJvbSBcInJlYWN0XCI7XG52YXIgQmxvY2tIZWFkZXJDb250ZXh0ID0gY3JlYXRlQ29udGV4dDIoe1xuICAuLi5CTE9DS19IRUFERVJfREVGQVVMVFNcbn0pO1xuXG4vLyBzcmMvcmVhY3QvcHJvdmlkZXJzL2Jsb2NrSGVhZGVyL3JlZHVjZXIudHNcbmZ1bmN0aW9uIGNoYWluQmxvY2tIZWFkZXJSZWR1Y2VyKHN0YXRlLCBhY3Rpb24pIHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgXCJBRERfQ0hBSU5fQkxPQ0tfSEVBREVSXCI6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgW2FjdGlvbi5jaGFpbklkXTogYWN0aW9uLmJsb2NrSGVhZGVyXG4gICAgICB9O1xuICB9XG59XG5cbi8vIHNyYy9yZWFjdC9wcm92aWRlcnMvYmxvY2tIZWFkZXIvcHJvdmlkZXIudHN4XG5pbXBvcnQgUmVhY3QzLCB7IHVzZUVmZmVjdCBhcyB1c2VFZmZlY3QyLCB1c2VNZW1vIGFzIHVzZU1lbW81LCB1c2VSZWR1Y2VyIH0gZnJvbSBcInJlYWN0XCI7XG52YXIgdG9CbG9ja051bWJlciA9ICh2YWxXaXRoQ29tbWEpID0+IHBhcnNlSW50KGAke3ZhbFdpdGhDb21tYT8uc3BsaXQoXCIsXCIpLmpvaW4oXCJcIil9YCk7XG52YXIgQmxvY2tIZWFkZXJQcm92aWRlciA9ICh7XG4gIGNoaWxkcmVuXG59KSA9PiB7XG4gIGNvbnN0IGNoYWluQXBpcyA9IHVzZUFwaXMoKTtcbiAgY29uc3QgW2NoYWluQmxvY2tIZWFkZXJzLCBkaXNwYXRjaF0gPSB1c2VSZWR1Y2VyKFxuICAgIGNoYWluQmxvY2tIZWFkZXJSZWR1Y2VyLFxuICAgIHt9XG4gICk7XG4gIGNvbnN0IGNoYWluSWRzID0gdXNlTWVtbzUoXG4gICAgKCkgPT4gY2hhaW5BcGlzLmFwaXMgPyBPYmplY3Qua2V5cyhjaGFpbkFwaXMuYXBpcykgOiBbXSxcbiAgICBbY2hhaW5BcGlzXVxuICApO1xuICB1c2VFZmZlY3QyKCgpID0+IHtcbiAgICBmdW5jdGlvbiBsaXN0ZW5Ub0Jsb2NrcygpIHtcbiAgICAgIHJldHVybiBjaGFpbklkcy5tYXAoKGNoYWluSWQpID0+IHtcbiAgICAgICAgcmV0dXJuIGNoYWluQXBpcz8uYXBpcz8uW2NoYWluSWRdPy5hcGk/LnJwYy5jaGFpbi5zdWJzY3JpYmVOZXdIZWFkcyhcbiAgICAgICAgICAoaGVhZGVyKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBjb25zdCBibG9ja051bWJlciA9IHRvQmxvY2tOdW1iZXIoXG4gICAgICAgICAgICAgICAgaGVhZGVyLm51bWJlci50b0h1bWFuKCk/LnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgYmxvY2tOdW1iZXIgJiYgZGlzcGF0Y2goe1xuICAgICAgICAgICAgICAgIHR5cGU6IFwiQUREX0NIQUlOX0JMT0NLX0hFQURFUlwiLFxuICAgICAgICAgICAgICAgIGNoYWluSWQsXG4gICAgICAgICAgICAgICAgYmxvY2tIZWFkZXI6IHsgYmxvY2tOdW1iZXIsIGhlYWRlciB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBsZXQgdW5zdWJGdW5jcztcbiAgICBQcm9taXNlLmFsbChsaXN0ZW5Ub0Jsb2NrcygpKS50aGVuKCh1bnN1YnMpID0+IHVuc3ViRnVuY3MgPT09IHVuc3Vicyk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHVuc3ViRnVuY3M/LmZvckVhY2goKHVuc3ViKSA9PiB1bnN1Yj8uKCkpO1xuICAgIH07XG4gIH0sIFtjaGFpbkFwaXNdKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDMuY3JlYXRlRWxlbWVudChCbG9ja0hlYWRlckNvbnRleHQuUHJvdmlkZXIsIHsgdmFsdWU6IGNoYWluQmxvY2tIZWFkZXJzIH0sIGNoaWxkcmVuKTtcbn07XG5cbi8vIHNyYy9yZWFjdC9ob29rcy9zdWJzdHJhdGUvdXNlQmxvY2tIZWFkZXIudHNcbmltcG9ydCB7IHVzZUNvbnRleHQgYXMgdXNlQ29udGV4dDMgfSBmcm9tIFwicmVhY3RcIjtcbnZhciB1c2VCbG9ja0hlYWRlciA9IChjaGFpbklkKSA9PiB7XG4gIGNvbnN0IGNoYWluID0gdXNlQ2hhaW4oY2hhaW5JZCk7XG4gIHJldHVybiBjaGFpbiA/IHVzZUNvbnRleHQzKEJsb2NrSGVhZGVyQ29udGV4dClbY2hhaW4uaWRdIDogdm9pZCAwO1xufTtcbnZhciB1c2VCbG9ja0hlYWRlcnMgPSAoKSA9PiB1c2VDb250ZXh0MyhCbG9ja0hlYWRlckNvbnRleHQpO1xuXG4vLyBzcmMvcmVhY3QvaG9va3MvY29udHJhY3RzL3VzZUNhbGxTdWJzY3JpcHRpb24udHNcbmltcG9ydCB7IHVzZUVmZmVjdCBhcyB1c2VFZmZlY3QzIH0gZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiB1c2VDYWxsU3Vic2NyaXB0aW9uKGNoYWluQ29udHJhY3QsIG1lc3NhZ2UsIGFyZ3MgPSBbXSwgb3B0aW9ucykge1xuICBjb25zdCBjYWxsMiA9IHVzZUNhbGwoY2hhaW5Db250cmFjdCwgbWVzc2FnZSk7XG4gIGNvbnN0IGJsb2NrTnVtYmVyID0gdXNlQmxvY2tIZWFkZXIoY2hhaW5Db250cmFjdD8uY2hhaW5JZCk/LmJsb2NrTnVtYmVyO1xuICB1c2VFZmZlY3QzKCgpID0+IHtcbiAgICBjYWxsMi5zZW5kKGFyZ3MsIG9wdGlvbnMpO1xuICB9LCBbYmxvY2tOdW1iZXJdKTtcbiAgcmV0dXJuIGNhbGwyO1xufVxuXG4vLyBzcmMvcmVhY3QvaG9va3MvY29udHJhY3RzL3VzZUNvZGVIYXNoLnRzXG5pbXBvcnQgeyB1c2VDYWxsYmFjayBhcyB1c2VDYWxsYmFjazMsIHVzZUVmZmVjdCBhcyB1c2VFZmZlY3Q0LCB1c2VTdGF0ZSBhcyB1c2VTdGF0ZTMgfSBmcm9tIFwicmVhY3RcIjtcbnZhciBDb2RlSGFzaEVycm9yID0gLyogQF9fUFVSRV9fICovICgoQ29kZUhhc2hFcnJvcjIpID0+IHtcbiAgQ29kZUhhc2hFcnJvcjJbXCJJbnZhbGlkSGFzaFwiXSA9IFwiSW52YWxpZCBjb2RlIGhhc2ggdmFsdWUuXCI7XG4gIHJldHVybiBDb2RlSGFzaEVycm9yMjtcbn0pKENvZGVIYXNoRXJyb3IgfHwge30pO1xudmFyIHVzZUNvZGVIYXNoID0gKCkgPT4ge1xuICBjb25zdCBbY29kZUhhc2gsIHNldENvZGVIYXNoXSA9IHVzZVN0YXRlMyhcIlwiKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTMoKTtcbiAgdXNlRWZmZWN0NCgoKSA9PiB7XG4gICAgaWYgKGlzVmFsaWRIYXNoKGNvZGVIYXNoLCA2NCkpIHtcbiAgICAgIGVycm9yICYmIHNldEVycm9yKHZvaWQgMCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvZGVIYXNoICYmIHNldEVycm9yKFwiSW52YWxpZCBjb2RlIGhhc2ggdmFsdWUuXCIgLyogSW52YWxpZEhhc2ggKi8pO1xuICB9LCBbY29kZUhhc2hdKTtcbiAgY29uc3Qgc2V0ID0gdXNlQ2FsbGJhY2szKChzKSA9PiB7XG4gICAgc2V0Q29kZUhhc2gocyB8fCBcIlwiKTtcbiAgfSwgW10pO1xuICBjb25zdCByZXNldFN0YXRlID0gdXNlQ2FsbGJhY2szKCgpID0+IHtcbiAgICBzZXRDb2RlSGFzaChcIlwiKTtcbiAgICBzZXRFcnJvcih2b2lkIDApO1xuICB9LCBbXSk7XG4gIHJldHVybiB7XG4gICAgY29kZUhhc2gsXG4gICAgcmVzZXRTdGF0ZSxcbiAgICBzZXQsXG4gICAgZXJyb3JcbiAgfTtcbn07XG5cbi8vIHNyYy9yZWFjdC9wcm92aWRlcnMvYXBpL2NvbnRleHQudHNcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQgYXMgY3JlYXRlQ29udGV4dDMgfSBmcm9tIFwicmVhY3RcIjtcbnZhciBBUElDb250ZXh0ID0gY3JlYXRlQ29udGV4dDMoe1xuICBhcGlzOiB7fVxufSk7XG5cbi8vIHNyYy9yZWFjdC9wcm92aWRlcnMvYXBpL3JlZHVjZXIudHNcbmZ1bmN0aW9uIGFwaVByb3ZpZGVyc1JlZHVjZXIoc3RhdGUsIGFjdGlvbikge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBcIkFERF9BUElfUFJPVklERVJcIjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBbYWN0aW9uLmNoYWluSWRdOiBhY3Rpb24uYXBpUHJvdmlkZXJcbiAgICAgIH07XG4gIH1cbn1cblxuLy8gc3JjL3JlYWN0L3Byb3ZpZGVycy9hcGkvcHJvdmlkZXIudHN4XG5pbXBvcnQgUmVhY3Q0LCB7IHVzZUVmZmVjdCBhcyB1c2VFZmZlY3Q1LCB1c2VSZWR1Y2VyIGFzIHVzZVJlZHVjZXIyIH0gZnJvbSBcInJlYWN0XCI7XG52YXIgQVBJUHJvdmlkZXIgPSAoe1xuICBjaGlsZHJlblxufSkgPT4ge1xuICBjb25zdCBjaGFpbnMgPSB1c2VDaGFpbnMoKTtcbiAgY29uc3QgeyBjaGFpblJwY3MgfSA9IHVzZUNvbmZpZygpO1xuICBjb25zdCBbYXBpcywgZGlzcGF0Y2hdID0gdXNlUmVkdWNlcjIoYXBpUHJvdmlkZXJzUmVkdWNlciwge30pO1xuICB1c2VFZmZlY3Q1KCgpID0+IHtcbiAgICBjaGFpbnMuZm9yRWFjaCgoY2hhaW4pID0+IHtcbiAgICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IFdzUHJvdmlkZXIoY2hhaW5ScGNzW2NoYWluLmlkXSB8fCBjaGFpbi5ycGNzWzBdKTtcbiAgICAgIEFwaVByb21pc2UuY3JlYXRlKHsgcHJvdmlkZXIgfSkudGhlbigoYXBpKSA9PiB7XG4gICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICB0eXBlOiBcIkFERF9BUElfUFJPVklERVJcIixcbiAgICAgICAgICBjaGFpbklkOiBjaGFpbi5pZCxcbiAgICAgICAgICBhcGlQcm92aWRlcjogeyBhcGksIHByb3ZpZGVyIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSwgW2NoYWlucywgY2hhaW5ScGNzXSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q0LmNyZWF0ZUVsZW1lbnQoQVBJQ29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogeyBhcGlzIH0gfSwgY2hpbGRyZW4pO1xufTtcblxuLy8gc3JjL3JlYWN0L2hvb2tzL3N1YnN0cmF0ZS91c2VBcGkudHNcbmltcG9ydCB7IHVzZUNvbnRleHQgYXMgdXNlQ29udGV4dDQgfSBmcm9tIFwicmVhY3RcIjtcbnZhciB1c2VBcGlzID0gKCkgPT4gdXNlQ29udGV4dDQoQVBJQ29udGV4dCk7XG52YXIgdXNlQXBpID0gKGNoYWluSWQpID0+IHtcbiAgY29uc3QgZGVmYXVsdENoYWluID0gdXNlQ2hhaW4oKTtcbiAgY29uc3QgaWRPckRlZmF1bHQgPSBjaGFpbklkIHx8IGRlZmF1bHRDaGFpbj8uaWQ7XG4gIHJldHVybiBpZE9yRGVmYXVsdCA/IHVzZUFwaXMoKT8uYXBpcz8uW2lkT3JEZWZhdWx0XSA6IHZvaWQgMDtcbn07XG5cbi8vIHNyYy9yZWFjdC9ob29rcy9jb250cmFjdHMvdXNlQ29udHJhY3QudHNcbmltcG9ydCB7IHVzZUVmZmVjdCBhcyB1c2VFZmZlY3Q2LCB1c2VNZW1vIGFzIHVzZU1lbW82LCB1c2VTdGF0ZSBhcyB1c2VTdGF0ZTQgfSBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIHVzZUNvbnRyYWN0KGFkZHJlc3MsIG1ldGFkYXRhLCBjaGFpbklkKSB7XG4gIGNvbnN0IFtjb250cmFjdCwgc2V0Q29udHJhY3RdID0gdXNlU3RhdGU0KCk7XG4gIGNvbnN0IGNoYWluQ29uZmlnID0gdXNlQ2hhaW4oY2hhaW5JZCk7XG4gIGNvbnN0IHsgYXBpIH0gPSB1c2VBcGkoY2hhaW5Db25maWc/LmlkKSB8fCB7fTtcbiAgY29uc3QgYWJpID0gdXNlTWVtbzYoXG4gICAgKCkgPT4gYXBpICYmIG5ldyBBYmkobWV0YWRhdGEsIGFwaS5yZWdpc3RyeS5nZXRDaGFpblByb3BlcnRpZXMoKSksXG4gICAgW2FwaV1cbiAgKTtcbiAgdXNlRWZmZWN0NigoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGFwaSAmJiBhYmkgJiYgc2V0Q29udHJhY3QobmV3IENvbnRyYWN0UHJvbWlzZShhcGksIGFiaSwgYWRkcmVzcykpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkNvdWxkbid0IGNyZWF0ZSBjb250cmFjdCBpbnN0YW5jZTogXCIsIGVycik7XG4gICAgfVxuICB9LCBbYWJpLCBhZGRyZXNzLCBhcGldKTtcbiAgcmV0dXJuIGNoYWluQ29uZmlnICYmIGNvbnRyYWN0ID8geyBjaGFpbklkOiBjaGFpbkNvbmZpZy5pZCwgY29udHJhY3QgfSA6IHZvaWQgMDtcbn1cblxuLy8gc3JjL3JlYWN0L2hvb2tzL2NvbnRyYWN0cy91c2VUeEV2ZW50cy50c1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2sgYXMgdXNlQ2FsbGJhY2s0LCB1c2VFZmZlY3QgYXMgdXNlRWZmZWN0NywgdXNlU3RhdGUgYXMgdXNlU3RhdGU1IH0gZnJvbSBcInJlYWN0XCI7XG52YXIgdXNlVHhFdmVudHMgPSAodHgpID0+IHtcbiAgY29uc3QgW2V2ZW50cywgc2V0RXZlbnRzXSA9IHVzZVN0YXRlNShbXSk7XG4gIGNvbnN0IHJlc2V0U3RhdGUgPSB1c2VDYWxsYmFjazQoKCkgPT4gc2V0RXZlbnRzKFtdKSwgW10pO1xuICB1c2VFZmZlY3Q3KCgpID0+IHtcbiAgICBpZiAoIWlzSW5CbG9jayh0eCkgfHwgIXR4LnJlc3VsdClcbiAgICAgIHJldHVybjtcbiAgICBzZXRFdmVudHMoWy4uLnR4LnJlc3VsdC5ldmVudHNdKTtcbiAgfSwgW3R4LnN0YXR1c10pO1xuICByZXR1cm4geyBldmVudHMsIHJlc2V0U3RhdGUgfTtcbn07XG5cbi8vIHNyYy9yZWFjdC9ob29rcy9jb250cmFjdHMvdXNlRGVwbG95ZXIvdHlwZXMudHNcbnZhciBEZXBsb3llckVycm9yID0gLyogQF9fUFVSRV9fICovICgoRGVwbG95ZXJFcnJvcjIpID0+IHtcbiAgRGVwbG95ZXJFcnJvcjJbXCJOb0NvZGVIYXNoT3JXYXNtXCJdID0gXCJZb3UgbXVzdCBzdXBwbHkgZWl0aGVyIGEgY29kZSBoYXNoIG9yIG1ldGFkYXRhIGNvbnRhaW5pbmcgV2FzbS5cIjtcbiAgRGVwbG95ZXJFcnJvcjJbXCJDb25zdHJ1Y3Rvck5vdEZvdW5kXCJdID0gXCJUaGUgY29uc3RydWN0b3IgbWV0aG9kIHdhcyBub3QgZm91bmQuXCI7XG4gIERlcGxveWVyRXJyb3IyW1wiSW5zdGFudGlhdGVOb3RTdXBwb3J0ZWRGb3JBcGlcIl0gPSBcIkluc3RhbnRpYXRlIG1ldGhvZCBub3QgZm91bmQgZm9yIGNoYWluIEFQSVwiO1xuICBEZXBsb3llckVycm9yMltcIkNvdWxkTm90Q3JlYXRlVHhcIl0gPSBcIkNvdWxkIG5vdCBjcmVhdGUgZGVwbG95IHRyYW5zYWN0aW9uIGZ1bmN0aW9uXCI7XG4gIERlcGxveWVyRXJyb3IyW1wiVHJhbnNhY3Rpb25GYWlsZWRcIl0gPSBcIlRyYW5zYWN0aW9uIGZhaWxlZC5cIjtcbiAgRGVwbG95ZXJFcnJvcjJbXCJUcmFuc2FjdGlvbkNhbmNlbGxlZFwiXSA9IFwiVHJhbnNhY3Rpb24gY2FuY2VsbGVkLlwiO1xuICBEZXBsb3llckVycm9yMltcIldhbGxldE5vdENvbm5lY3RlZFwiXSA9IFwiV2FsbGV0IG5vdCBjb25uZWN0ZWQuXCI7XG4gIERlcGxveWVyRXJyb3IyW1wiQXBpSW5zdGFuY2VOb3RGb3VuZFwiXSA9IFwiQXBpIGNsaWVudCBub3QgZm91bmQuIFRyeSByZWZyZXNoaW5nIHRoZSBwYWdlLlwiO1xuICBEZXBsb3llckVycm9yMltcIkludmFsaWRDb2RlSGFzaFwiXSA9IFwiSW52YWxpZCBjb2RlIGhhc2guXCI7XG4gIHJldHVybiBEZXBsb3llckVycm9yMjtcbn0pKERlcGxveWVyRXJyb3IgfHwge30pO1xuXG4vLyBzcmMvcmVhY3QvaG9va3MvY29udHJhY3RzL3VzZURlcGxveWVyL3VzZURlcGxveWVyLnRzXG5pbXBvcnQgeyB1c2VDYWxsYmFjayBhcyB1c2VDYWxsYmFjazUsIHVzZUVmZmVjdCBhcyB1c2VFZmZlY3Q4LCB1c2VNZW1vIGFzIHVzZU1lbW83LCB1c2VTdGF0ZSBhcyB1c2VTdGF0ZTYgfSBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIHVzZURlcGxveWVyKGNoYWluSWQpIHtcbiAgY29uc3QgeyBhY2NvdW50IH0gPSB1c2VXYWxsZXQoKTtcbiAgY29uc3QgY2hhaW5BcGkgPSB1c2VBcGkoY2hhaW5JZCk7XG4gIGNvbnN0IGNoYWluID0gdXNlQ2hhaW4oY2hhaW5JZCk7XG4gIGNvbnN0IEMgPSB1c2VDb25maWcoKTtcbiAgY29uc3QgW2lzU3VibWl0dGluZywgc2V0SXNTdWJtaXR0aW5nXSA9IHVzZVN0YXRlNihmYWxzZSk7XG4gIGNvbnN0IFt3aWxsQmVTdWNjZXNzZnVsLCBzZXRXaWxsQmVTdWNjZXNzZnVsXSA9IHVzZVN0YXRlNihmYWxzZSk7XG4gIGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSB1c2VTdGF0ZTYoXCJOb25lXCIpO1xuICBjb25zdCBbcmVzdWx0LCBzZXRSZXN1bHRdID0gdXNlU3RhdGU2KCk7XG4gIGNvbnN0IFtjb250cmFjdEFkZHJlc3MsIHNldENvbnRyYWN0QWRkcmVzc10gPSB1c2VTdGF0ZTYoKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTYoKTtcbiAgY29uc3QgW2dhc0NvbnN1bWVkLCBzZXRHYXNDb25zdW1lZF0gPSB1c2VTdGF0ZTYoKTtcbiAgY29uc3QgW2dhc1JlcXVpcmVkLCBzZXRHYXNSZXF1aXJlZF0gPSB1c2VTdGF0ZTYoKTtcbiAgY29uc3QgW3N0b3JhZ2VEZXBvc2l0LCBzZXRTdG9yYWdlRGVwb3NpdF0gPSB1c2VTdGF0ZTYoKTtcbiAgY29uc3QgdHhFdmVudHMgPSB1c2VUeEV2ZW50cyh7IHN0YXR1cywgcmVzdWx0IH0pO1xuICB1c2VFZmZlY3Q4KCgpID0+IHtcbiAgICB0eEV2ZW50cy5ldmVudHMuZm9yRWFjaCgoZXZlbnQpID0+IHtcbiAgICAgIGNvbnN0IGZhaWx1cmUgPSBmb3JtYXRFeHRyaW5zaWNGYWlsZWQoZXZlbnQsIGNoYWluQXBpPy5hcGkpO1xuICAgICAgZmFpbHVyZSAmJiBzZXRFcnJvcihmYWlsdXJlKTtcbiAgICB9KTtcbiAgfSwgW3R4RXZlbnRzXSk7XG4gIGNvbnN0IHdhc0RlcGxveWVkID0gdXNlTWVtbzcoXG4gICAgKCkgPT4gQm9vbGVhbih0eEV2ZW50cy5ldmVudHMuZmluZChpc0NvbnRyYWN0SW5zdGFudGlhdGVkRXZlbnQpKSxcbiAgICBbdHhFdmVudHMuZXZlbnRzXVxuICApO1xuICBjb25zdCByZXNldFN0YXRlID0gdXNlQ2FsbGJhY2s1KCgpID0+IHtcbiAgICBzZXRSZXN1bHQodm9pZCAwKTtcbiAgICBzZXRFcnJvcih2b2lkIDApO1xuICAgIHNldENvbnRyYWN0QWRkcmVzcyh2b2lkIDApO1xuICAgIHNldFN0YXR1cyhcIk5vbmVcIik7XG4gICAgc2V0SXNTdWJtaXR0aW5nKGZhbHNlKTtcbiAgICBzZXRHYXNDb25zdW1lZCh2b2lkIDApO1xuICAgIHNldEdhc1JlcXVpcmVkKHZvaWQgMCk7XG4gICAgc2V0U3RvcmFnZURlcG9zaXQodm9pZCAwKTtcbiAgICB0eEV2ZW50cy5yZXNldFN0YXRlKCk7XG4gIH0sIFtdKTtcbiAgY29uc3QgZHJ5UnVuID0gdXNlTWVtbzcoXG4gICAgKCkgPT4gYXN5bmMgKGFiaSwgY29uc3RydWN0b3JOYW1lLCBjb25zdHJ1Y3RvclBhcmFtcywgb3B0aW9ucywgY2IgPSBOT09QKSA9PiB7XG4gICAgICBpZiAoIWNoYWluQXBpPy5hcGkpIHtcbiAgICAgICAgc2V0RXJyb3IoXCJBcGkgY2xpZW50IG5vdCBmb3VuZC4gVHJ5IHJlZnJlc2hpbmcgdGhlIHBhZ2UuXCIgLyogQXBpSW5zdGFuY2VOb3RGb3VuZCAqLyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHNldEVycm9yKHZvaWQgMCk7XG4gICAgICBjb25zdCBjb25zdHJ1Y3Rvck1lc3NhZ2UgPSBjb25zdHJ1Y3Rvck5hbWUgPyBhYmkuY29uc3RydWN0b3JzLmZpbmQoKHsgbWV0aG9kIH0pID0+IG1ldGhvZCA9PT0gY29uc3RydWN0b3JOYW1lKSA6IGFiaS5jb25zdHJ1Y3RvcnM/LlswXTtcbiAgICAgIGlmICghY29uc3RydWN0b3JNZXNzYWdlKSB7XG4gICAgICAgIHNldEVycm9yKFwiVGhlIGNvbnN0cnVjdG9yIG1ldGhvZCB3YXMgbm90IGZvdW5kLlwiIC8qIENvbnN0cnVjdG9yTm90Rm91bmQgKi8pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBjb25zdCB7IGNvZGVIYXNoIH0gPSB0b0RlcGxveU9wdGlvbnMob3B0aW9ucyk7XG4gICAgICBjb25zdCB3YXNtID0gYWJpLmluZm8uc291cmNlLndhc207XG4gICAgICBjb25zdCBoYXNDb2RlSGFzaE9yV2FzbSA9IGNvZGVIYXNoICE9PSB2b2lkIDAgfHwgISF3YXNtO1xuICAgICAgaWYgKCFoYXNDb2RlSGFzaE9yV2FzbSkge1xuICAgICAgICBzZXRFcnJvcihcIllvdSBtdXN0IHN1cHBseSBlaXRoZXIgYSBjb2RlIGhhc2ggb3IgbWV0YWRhdGEgY29udGFpbmluZyBXYXNtLlwiIC8qIE5vQ29kZUhhc2hPcldhc20gKi8pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoY29kZUhhc2ggIT09IHZvaWQgMCAmJiAhaXNWYWxpZEhhc2goY29kZUhhc2gsIDY0KSkge1xuICAgICAgICBzZXRFcnJvcihcIkludmFsaWQgY29kZSBoYXNoLlwiIC8qIEludmFsaWRDb2RlSGFzaCAqLyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGNvZGUgPSBjb2RlSGFzaCA/IG5ldyBCbHVlcHJpbnRQcm9taXNlKGNoYWluQXBpLmFwaSwgYWJpLCBjb2RlSGFzaCkgOiBuZXcgQ29kZVByb21pc2UoY2hhaW5BcGkuYXBpLCBhYmksIHdhc20udG9VOGEoKSk7XG4gICAgICBjb25zdCBhYmlQYXJhbXMgPSBjb25zdHJ1Y3Rvck1lc3NhZ2UuYXJncztcbiAgICAgIGlmICghY2hhaW5BcGk/LmFwaT8uY2FsbD8uY29udHJhY3RzQXBpPy5pbnN0YW50aWF0ZSkge1xuICAgICAgICBzZXRFcnJvcihcIkluc3RhbnRpYXRlIG1ldGhvZCBub3QgZm91bmQgZm9yIGNoYWluIEFQSVwiIC8qIEluc3RhbnRpYXRlTm90U3VwcG9ydGVkRm9yQXBpICovKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29uc3QgbWVzc2FnZVBhcmFtcyA9IHRvTWVzc2FnZVBhcmFtcyhcbiAgICAgICAgY2hhaW5BcGkuYXBpLFxuICAgICAgICBhYmlQYXJhbXMsXG4gICAgICAgIGNvbnN0cnVjdG9yUGFyYW1zIHx8IHt9XG4gICAgICApO1xuICAgICAgY29uc3QgY2FsbGVyID0gYWNjb3VudD8uYWRkcmVzcyB8fCAoY2hhaW4/LmlkID8gQz8uY2FsbGVyPy5bY2hhaW4/LmlkXSA6IEMuY2FsbGVyPy5kZWZhdWx0KTtcbiAgICAgIGNvbnN0IGdhc0xpbWl0TWF4ID0gbnVsbDtcbiAgICAgIGNvbnN0IHN0b3JhZ2VEZXBvc2l0TWF4ID0gbnVsbDtcbiAgICAgIGNvbnN0IHBheWFibGVWYWx1ZSA9IGNoYWluQXBpLmFwaS5yZWdpc3RyeS5jcmVhdGVUeXBlKFxuICAgICAgICBcIkJhbGFuY2VcIixcbiAgICAgICAgdG9EZXBsb3lPcHRpb25zKG9wdGlvbnMpLnZhbHVlXG4gICAgICApO1xuICAgICAgY29uc3QgcGFyYW1zID0gW1xuICAgICAgICBjYWxsZXIsXG4gICAgICAgIHBheWFibGVWYWx1ZSxcbiAgICAgICAgZ2FzTGltaXRNYXgsXG4gICAgICAgIHN0b3JhZ2VEZXBvc2l0TWF4LFxuICAgICAgICBjb2RlSGFzaCA/IHsgRXhpc3Rpbmc6IGNvZGVIYXNoIH0gOiB7IFVwbG9hZDogYWJpLmluZm8uc291cmNlLndhc20gfSxcbiAgICAgICAgY29uc3RydWN0b3JNZXNzYWdlLnRvVThhKG1lc3NhZ2VQYXJhbXMpLFxuICAgICAgICBvcHRpb25zPy5zYWx0ID8gZW5jb2RlU2FsdChvcHRpb25zPy5zYWx0KSA6IFwiXCJcbiAgICAgIF07XG4gICAgICBzZXRJc1N1Ym1pdHRpbmcodHJ1ZSk7XG4gICAgICBsZXQgcmVzO1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmVzID0gYXdhaXQgY2hhaW5BcGkuYXBpLmNhbGwuY29udHJhY3RzQXBpLmluc3RhbnRpYXRlKC4uLnBhcmFtcyk7XG4gICAgICAgIHNldElzU3VibWl0dGluZyhmYWxzZSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHNldEVycm9yKGU/LnRvU3RyaW5nKCkpO1xuICAgICAgICBzZXRJc1N1Ym1pdHRpbmcoZmFsc2UpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzZXRXaWxsQmVTdWNjZXNzZnVsKHJlcy5yZXN1bHQuaXNPayk7XG4gICAgICBpZiAocmVzLnJlc3VsdC5pc09rKSB7XG4gICAgICAgIHNldENvbnRyYWN0QWRkcmVzcyhyZXMucmVzdWx0LmFzT2suYWNjb3VudElkLnRvU3RyaW5nKCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0RXJyb3IoXG4gICAgICAgICAgZGVjb2RlRXJyb3IocmVzLnJlc3VsdC5hc0VyciwgeyBjb250cmFjdDogeyBhcGk6IGNoYWluQXBpLmFwaSB9IH0pXG4gICAgICAgICk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHNldEdhc0NvbnN1bWVkKHJlcy5nYXNDb25zdW1lZCk7XG4gICAgICBzZXRHYXNSZXF1aXJlZChyZXMuZ2FzUmVxdWlyZWQpO1xuICAgICAgc2V0U3RvcmFnZURlcG9zaXQocmVzLnN0b3JhZ2VEZXBvc2l0KTtcbiAgICAgIGxldCB0eDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IG1ldGhvZCA9IGNvZGUudHhbY29uc3RydWN0b3JNZXNzYWdlLm1ldGhvZF07XG4gICAgICAgIGNvbnN0IG1ldGhvZE9wdGlvbnMgPSB7XG4gICAgICAgICAgZ2FzTGltaXQ6IHJlcy5nYXNSZXF1aXJlZCxcbiAgICAgICAgICBzdG9yYWdlRGVwb3NpdExpbWl0OiByZXMuc3RvcmFnZURlcG9zaXQuYXNDaGFyZ2UgfHwgbnVsbCxcbiAgICAgICAgICAuLi50b0RlcGxveU9wdGlvbnMob3B0aW9ucylcbiAgICAgICAgfTtcbiAgICAgICAgdHggPSBjb25zdHJ1Y3Rvck1lc3NhZ2UuYXJncy5sZW5ndGggPiAwID8gbWV0aG9kPy4obWV0aG9kT3B0aW9ucywgLi4ubWVzc2FnZVBhcmFtcykgOiBtZXRob2Q/LihtZXRob2RPcHRpb25zKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgc2V0RXJyb3IoZT8udG9TdHJpbmcoKSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICghdHgpIHtcbiAgICAgICAgY2I/Lih2b2lkIDAsIGNoYWluQXBpLmFwaSwgXCJDb3VsZCBub3QgY3JlYXRlIGRlcGxveSB0cmFuc2FjdGlvbiBmdW5jdGlvblwiIC8qIENvdWxkTm90Q3JlYXRlVHggKi8pO1xuICAgICAgICBzZXRFcnJvcihcIkNvdWxkIG5vdCBjcmVhdGUgZGVwbG95IHRyYW5zYWN0aW9uIGZ1bmN0aW9uXCIgLyogQ291bGROb3RDcmVhdGVUeCAqLyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0eDtcbiAgICB9LFxuICAgIFthY2NvdW50LCBjaGFpbkFwaT8uYXBpXVxuICApO1xuICBjb25zdCBzaWduQW5kU2VuZCA9IHVzZU1lbW83KFxuICAgICgpID0+IGFzeW5jIChhYmksIGNvbnN0cnVjdG9yTmFtZSwgY29uc3RydWN0b3JBcmdzID0ge30sIG9wdGlvbnMgPSB7IHZhbHVlOiBCTl9aRVJPIH0sIGNiID0gTk9PUCkgPT4ge1xuICAgICAgaWYgKCFhY2NvdW50IHx8ICFhY2NvdW50Py53YWxsZXQ/LmV4dGVuc2lvbi5zaWduZXIpIHtcbiAgICAgICAgc2V0RXJyb3IoXCJXYWxsZXQgbm90IGNvbm5lY3RlZC5cIiAvKiBXYWxsZXROb3RDb25uZWN0ZWQgKi8pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoIWNoYWluQXBpPy5hcGkpIHtcbiAgICAgICAgc2V0RXJyb3IoXCJBcGkgY2xpZW50IG5vdCBmb3VuZC4gVHJ5IHJlZnJlc2hpbmcgdGhlIHBhZ2UuXCIgLyogQXBpSW5zdGFuY2VOb3RGb3VuZCAqLyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHR4RXZlbnRzLnJlc2V0U3RhdGUoKTtcbiAgICAgIGRyeVJ1bihhYmksIGNvbnN0cnVjdG9yTmFtZSwgY29uc3RydWN0b3JBcmdzLCBvcHRpb25zLCBjYikudGhlbihcbiAgICAgICAgKHR4KSA9PiB7XG4gICAgICAgICAgdHggJiYgc2V0U3RhdHVzKFwiUGVuZGluZ1NpZ25hdHVyZVwiKTtcbiAgICAgICAgICB0eD8uc2lnbkFuZFNlbmQoXG4gICAgICAgICAgICBhY2NvdW50Py5hZGRyZXNzLFxuICAgICAgICAgICAgeyBzaWduZXI6IGFjY291bnQ/LndhbGxldD8uZXh0ZW5zaW9uLnNpZ25lciB9LFxuICAgICAgICAgICAgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMuaXNJbkJsb2NrKSB7XG4gICAgICAgICAgICAgICAgc2V0Q29udHJhY3RBZGRyZXNzKHJlc3BvbnNlPy5jb250cmFjdD8uYWRkcmVzcy50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuaXNFcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVyciA9IGRlY29kZUVycm9yKHJlc3BvbnNlLmRpc3BhdGNoRXJyb3IsIHtcbiAgICAgICAgICAgICAgICAgIGNvbnRyYWN0OiB7IGFwaTogY2hhaW5BcGkuYXBpIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBzZXRFcnJvcihlcnIpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHNldFN0YXR1cyhyZXNwb25zZS5zdGF0dXMudHlwZSk7XG4gICAgICAgICAgICAgIHNldFJlc3VsdChyZXNwb25zZSk7XG4gICAgICAgICAgICAgIGNiPy4ocmVzcG9uc2UsIGNoYWluQXBpLmFwaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgKS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgY2I/Lih2b2lkIDAsIGNoYWluQXBpLmFwaSwgZSk7XG4gICAgICAgICAgICBzZXRTdGF0dXMoXCJOb25lXCIpO1xuICAgICAgICAgICAgaWYgKGlzVHhDYW5jZWxsZWRFcnJvcihlKSkge1xuICAgICAgICAgICAgICBzZXRFcnJvcihcIlRyYW5zYWN0aW9uIGNhbmNlbGxlZC5cIiAvKiBUcmFuc2FjdGlvbkNhbmNlbGxlZCAqLyk7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNldEVycm9yKFwiVHJhbnNhY3Rpb24gZmFpbGVkLlwiIC8qIFRyYW5zYWN0aW9uRmFpbGVkICovKTtcbiAgICAgICAgICB9KS5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICAgIHNldElzU3VibWl0dGluZyhmYWxzZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfSxcbiAgICBbYWNjb3VudCwgYWNjb3VudD8ud2FsbGV0Py5leHRlbnNpb24/LnNpZ25lciwgY2hhaW5BcGk/LmFwaV1cbiAgKTtcbiAgcmV0dXJuIHtcbiAgICBkcnlSdW4sXG4gICAgc2lnbkFuZFNlbmQsXG4gICAgY29udHJhY3RBZGRyZXNzLFxuICAgIHN0YXR1cyxcbiAgICByZXN1bHQsXG4gICAgaXNTdWJtaXR0aW5nLFxuICAgIGVycm9yLFxuICAgIHJlc2V0U3RhdGUsXG4gICAgd2lsbEJlU3VjY2Vzc2Z1bCxcbiAgICB3YXNEZXBsb3llZCxcbiAgICBzdG9yYWdlRGVwb3NpdCxcbiAgICBnYXNDb25zdW1lZCxcbiAgICBnYXNSZXF1aXJlZCxcbiAgICBldmVudHM6IHR4RXZlbnRzLmV2ZW50c1xuICB9O1xufVxuXG4vLyBzcmMvcmVhY3QvaG9va3MvY29udHJhY3RzL3VzZURyeVJ1bi50c1xuaW1wb3J0IHsgdXNlTWVtbyBhcyB1c2VNZW1vOCwgdXNlU3RhdGUgYXMgdXNlU3RhdGU3IH0gZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiB1c2VEcnlSdW4oY2hhaW5Db250cmFjdCwgbWVzc2FnZSkge1xuICBjb25zdCB7IGFjY291bnQgfSA9IHVzZVdhbGxldCgpO1xuICBjb25zdCBkZWZhdWx0Q2FsbGVyID0gdXNlRGVmYXVsdENhbGxlcihjaGFpbkNvbnRyYWN0Py5jaGFpbklkKTtcbiAgY29uc3QgW3Jlc3VsdCwgc2V0UmVzdWx0XSA9IHVzZVN0YXRlNygpO1xuICBjb25zdCBbaXNTdWJtaXR0aW5nLCBzZXRJc1N1Ym1pdHRpbmddID0gdXNlU3RhdGU3KGZhbHNlKTtcbiAgY29uc3QgYWJpTWVzc2FnZSA9IHVzZUFiaU1lc3NhZ2UoY2hhaW5Db250cmFjdD8uY29udHJhY3QsIG1lc3NhZ2UpO1xuICBjb25zdCBzZW5kID0gdXNlTWVtbzgoXG4gICAgKCkgPT4gYXN5bmMgKHBhcmFtcywgb3B0aW9ucykgPT4ge1xuICAgICAgY29uc3QgdHggPSBjaGFpbkNvbnRyYWN0Py5jb250cmFjdD8udHg/LlttZXNzYWdlXTtcbiAgICAgIGNvbnN0IGNhbGxlciA9IGFjY291bnQ/LmFkZHJlc3MgPyBhY2NvdW50LmFkZHJlc3MgOiBvcHRpb25zPy5kZWZhdWx0Q2FsbGVyID8gZGVmYXVsdENhbGxlciA6IHZvaWQgMDtcbiAgICAgIGlmICghY2FsbGVyIHx8ICFjaGFpbkNvbnRyYWN0Py5jb250cmFjdCB8fCAhYWJpTWVzc2FnZSB8fCAhdHgpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc2V0SXNTdWJtaXR0aW5nKHRydWUpO1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcCA9IGF3YWl0IGNhbGwoXG4gICAgICAgICAgY2hhaW5Db250cmFjdC5jb250cmFjdCxcbiAgICAgICAgICBhYmlNZXNzYWdlLFxuICAgICAgICAgIGNhbGxlcixcbiAgICAgICAgICBwYXJhbXMsXG4gICAgICAgICAgb3B0aW9uc1xuICAgICAgICApO1xuICAgICAgICBpZiAoIXJlc3AgfHwgIXJlc3Aub2spXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCB7IGdhc0NvbnN1bWVkLCBnYXNSZXF1aXJlZCwgc3RvcmFnZURlcG9zaXQgfSA9IHJlc3AudmFsdWUucmF3O1xuICAgICAgICBjb25zdCByZXF1aXJlc05vQXJndW1lbnRzID0gdHgubWV0YS5hcmdzLmxlbmd0aCA9PT0gMDtcbiAgICAgICAgY29uc3QgeyBwYXJ0aWFsRmVlIH0gPSBhd2FpdCAocmVxdWlyZXNOb0FyZ3VtZW50cyA/IHR4KHRvQ29udHJhY3RPcHRpb25zKG9wdGlvbnMpKSA6IHR4KHRvQ29udHJhY3RPcHRpb25zKG9wdGlvbnMpLCAuLi5wYXJhbXMgfHwgW10pKS5wYXltZW50SW5mbyhjYWxsZXIpO1xuICAgICAgICBjb25zdCByID0ge1xuICAgICAgICAgIC4uLnJlc3AsXG4gICAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgIC4uLnJlc3AudmFsdWUsXG4gICAgICAgICAgICBnYXNSZXF1aXJlZCxcbiAgICAgICAgICAgIGdhc0NvbnN1bWVkLFxuICAgICAgICAgICAgc3RvcmFnZURlcG9zaXQsXG4gICAgICAgICAgICBwYXJ0aWFsRmVlXG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBzZXRJc1N1Ym1pdHRpbmcoZmFsc2UpO1xuICAgICAgICBzZXRSZXN1bHQocik7XG4gICAgICAgIHJldHVybiByO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgICAgICBzZXRJc1N1Ym1pdHRpbmcoZmFsc2UpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfSxcbiAgICBbYWNjb3VudCwgY2hhaW5Db250cmFjdD8uY29udHJhY3QsIGFiaU1lc3NhZ2VdXG4gICk7XG4gIHJldHVybiB7XG4gICAgc2VuZCxcbiAgICBpc1N1Ym1pdHRpbmcsXG4gICAgcmVzdWx0LFxuICAgIHJlc29sdmVkOiBCb29sZWFuKHJlc3VsdCAmJiAhaXNTdWJtaXR0aW5nKSxcbiAgICByZXNldFN0YXRlOiAoKSA9PiB7XG4gICAgICBzZXRJc1N1Ym1pdHRpbmcoZmFsc2UpO1xuICAgICAgc2V0UmVzdWx0KHZvaWQgMCk7XG4gICAgfVxuICB9O1xufVxuXG4vLyBzcmMvcmVhY3QvcHJvdmlkZXJzL2V2ZW50cy9tb2RlbC50c1xudmFyIERFRkFVTFRfRVZFTlRTID0ge307XG5cbi8vIHNyYy9yZWFjdC9wcm92aWRlcnMvZXZlbnRzL2NvbnRleHQudHNcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQgYXMgY3JlYXRlQ29udGV4dDQgfSBmcm9tIFwicmVhY3RcIjtcbnZhciBFdmVudHNDb250ZXh0ID0gY3JlYXRlQ29udGV4dDQoe1xuICBldmVudHM6IERFRkFVTFRfRVZFTlRTLFxuICBhZGRFdmVudDogKCkgPT4gbnVsbCxcbiAgcmVtb3ZlRXZlbnQ6ICgpID0+IG51bGxcbn0pO1xuXG4vLyBzcmMvcmVhY3QvcHJvdmlkZXJzL2V2ZW50cy9yZWR1Y2VyLnRzXG5mdW5jdGlvbiBldmVudHNSZWR1Y2VyKHN0YXRlLCBhY3Rpb24pIHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgXCJBRERfRVZFTlRcIjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBbYWN0aW9uLmFkZHJlc3NdOiBbLi4uc3RhdGVbYWN0aW9uLmFkZHJlc3NdIHx8IFtdLCBhY3Rpb24uZXZlbnRdXG4gICAgICB9O1xuICAgIGNhc2UgXCJSRU1PVkVfRVZFTlRcIjoge1xuICAgICAgY29uc3QgZXZlbnRzID0gc3RhdGVbYWN0aW9uLmFkZHJlc3NdO1xuICAgICAgaWYgKCFldmVudHMpXG4gICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICAgIGNvbnN0IGlkeCA9IGV2ZW50cy5maW5kSW5kZXgoKGUpID0+IGUuaWQgPT09IGFjdGlvbi5ldmVudElkKTtcbiAgICAgIGlmIChpZHggPCAwKVxuICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgICBjb25zdCBuZXdDb250cmFjdFN0YXRlID0gW1xuICAgICAgICAuLi5ldmVudHMuc2xpY2UoMCwgaWR4KSxcbiAgICAgICAgLi4uZXZlbnRzLnNsaWNlKGlkeCArIDEsIGV2ZW50cy5sZW5ndGgpXG4gICAgICBdO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIFthY3Rpb24uYWRkcmVzc106IG5ld0NvbnRyYWN0U3RhdGVcbiAgICAgIH07XG4gICAgfVxuICB9XG59XG5cbi8vIHNyYy9yZWFjdC9wcm92aWRlcnMvZXZlbnRzL3Byb3ZpZGVyLnRzeFxuaW1wb3J0IFJlYWN0NSBmcm9tIFwicmVhY3RcIjtcbnZhciBFdmVudHNQcm92aWRlciA9ICh7XG4gIGNoaWxkcmVuXG59KSA9PiB7XG4gIGNvbnN0IFtldmVudHMsIGRpc3BhdGNoXSA9IFJlYWN0NS51c2VSZWR1Y2VyKGV2ZW50c1JlZHVjZXIsIERFRkFVTFRfRVZFTlRTKTtcbiAgY29uc3QgaXNNb3VudGVkID0gdXNlSXNNb3VudGVkKCk7XG4gIGNvbnN0IGFkZEV2ZW50ID0gUmVhY3Q1LnVzZUNhbGxiYWNrKFxuICAgICh7IGV2ZW50LCBhZGRyZXNzIH0pID0+IHtcbiAgICAgIGlmIChpc01vdW50ZWQoKSkge1xuICAgICAgICBkaXNwYXRjaCh7XG4gICAgICAgICAgdHlwZTogXCJBRERfRVZFTlRcIixcbiAgICAgICAgICBhZGRyZXNzLFxuICAgICAgICAgIGV2ZW50OiB7IC4uLmV2ZW50LCBpZDogcHNldWRvUmFuZG9tSWQoKSwgY3JlYXRlZEF0OiBEYXRlLm5vdygpIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBbZGlzcGF0Y2hdXG4gICk7XG4gIGNvbnN0IHJlbW92ZUV2ZW50ID0gUmVhY3Q1LnVzZUNhbGxiYWNrKFxuICAgICh7IGV2ZW50SWQsIGFkZHJlc3MgfSkgPT4ge1xuICAgICAgaWYgKGlzTW91bnRlZCgpKSB7XG4gICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICB0eXBlOiBcIlJFTU9WRV9FVkVOVFwiLFxuICAgICAgICAgIGFkZHJlc3MsXG4gICAgICAgICAgZXZlbnRJZFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFtkaXNwYXRjaF1cbiAgKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDUuY3JlYXRlRWxlbWVudChcbiAgICBFdmVudHNDb250ZXh0LlByb3ZpZGVyLFxuICAgIHtcbiAgICAgIHZhbHVlOiB7IGFkZEV2ZW50LCBldmVudHMsIHJlbW92ZUV2ZW50IH0sXG4gICAgICBjaGlsZHJlblxuICAgIH1cbiAgKTtcbn07XG5cbi8vIHNyYy9yZWFjdC9ob29rcy9jb250cmFjdHMvdXNlRXZlbnRTdWJzY3JpcHRpb24udHNcbmltcG9ydCB7IHVzZUNvbnRleHQgYXMgdXNlQ29udGV4dDUsIHVzZUVmZmVjdCBhcyB1c2VFZmZlY3Q5IH0gZnJvbSBcInJlYWN0XCI7XG52YXIgdXNlRXZlbnRTdWJzY3JpcHRpb24gPSAoY2hhaW5Db250cmFjdCkgPT4ge1xuICBjb25zdCB7IGV2ZW50cywgYWRkRXZlbnQsIHJlbW92ZUV2ZW50IH0gPSB1c2VDb250ZXh0NShFdmVudHNDb250ZXh0KTtcbiAgY29uc3QgeyBibG9ja051bWJlciwgaGVhZGVyIH0gPSB1c2VCbG9ja0hlYWRlcihjaGFpbkNvbnRyYWN0Py5jaGFpbklkKSB8fCB7fTtcbiAgY29uc3QgQyA9IHVzZUNvbmZpZygpO1xuICBjb25zdCBhZGRyZXNzID0gY2hhaW5Db250cmFjdD8uY29udHJhY3Q/LmFkZHJlc3M/LnRvU3RyaW5nKCkgfHwgXCJcIjtcbiAgY29uc3QgY29udHJhY3RFdmVudHMgPSBldmVudHM/LlthZGRyZXNzXSB8fCBbXTtcbiAgdXNlRWZmZWN0OSgoKSA9PiB7XG4gICAgY29uc3QgY29udHJhY3QgPSBjaGFpbkNvbnRyYWN0Py5jb250cmFjdDtcbiAgICBpZiAoIWhlYWRlcj8uaGFzaCB8fCAhY29udHJhY3QpXG4gICAgICByZXR1cm47XG4gICAgY29udHJhY3QuYXBpLmF0KGhlYWRlcj8uaGFzaCkudGhlbigoYXBpQXQpID0+IHtcbiAgICAgIGFwaUF0LnF1ZXJ5LnN5c3RlbT8uZXZlbnRzPy4oKGVuY29kZWRFdmVudCkgPT4ge1xuICAgICAgICBlbmNvZGVkRXZlbnQuZm9yRWFjaCgoeyBldmVudCB9KSA9PiB7XG4gICAgICAgICAgaWYgKGNvbnRyYWN0LmFwaS5ldmVudHMuY29udHJhY3RzPy5Db250cmFjdEVtaXR0ZWQ/LmlzKGV2ZW50KSkge1xuICAgICAgICAgICAgY29uc3QgW2NvbnRyYWN0QWRkcmVzcywgY29udHJhY3RFdmVudF0gPSBldmVudC5kYXRhO1xuICAgICAgICAgICAgaWYgKCFhZGRyZXNzIHx8ICFjb250cmFjdEFkZHJlc3MgfHwgIWNvbnRyYWN0RXZlbnQgfHwgY29udHJhY3RBZGRyZXNzLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKSAhPT0gYWRkcmVzcy50b0xvd2VyQ2FzZSgpKVxuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBjb25zdCBkZWNvZGVkRXZlbnQgPSBjb250cmFjdC5hYmkuZGVjb2RlRXZlbnQoXG4gICAgICAgICAgICAgICAgY29udHJhY3RFdmVudFxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICBjb25zdCBldmVudEl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBldmVudDoge1xuICAgICAgICAgICAgICAgICAgbmFtZTogZGVjb2RlZEV2ZW50LmV2ZW50LmlkZW50aWZpZXIsXG4gICAgICAgICAgICAgICAgICBhcmdzOiBkZWNvZGVkRXZlbnQuYXJncy5tYXAoKHYpID0+IHYudG9IdW1hbigpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgYWRkRXZlbnQoZXZlbnRJdGVtKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0sIFtjaGFpbkNvbnRyYWN0Py5jb250cmFjdCwgYmxvY2tOdW1iZXJdKTtcbiAgdXNlSW50ZXJ2YWwoKCkgPT4ge1xuICAgIGlmIChDLmV2ZW50cz8uZXhwaXJhdGlvbiA9PT0gMClcbiAgICAgIHJldHVybjtcbiAgICBjb25zdCBleHBpcmVkRXZlbnRzID0gZ2V0RXhwaXJlZEl0ZW0oXG4gICAgICBjb250cmFjdEV2ZW50cyxcbiAgICAgIEMuZXZlbnRzPy5leHBpcmF0aW9uIHx8IEZJVkVfU0VDT05EU1xuICAgICk7XG4gICAgZm9yIChjb25zdCBldmVudCBvZiBleHBpcmVkRXZlbnRzKSB7XG4gICAgICByZW1vdmVFdmVudCh7IGV2ZW50SWQ6IGV2ZW50LmlkLCBhZGRyZXNzIH0pO1xuICAgIH1cbiAgfSwgQy5ldmVudHM/LmNoZWNrSW50ZXJ2YWwgfHwgSEFMRl9BX1NFQ09ORCk7XG59O1xuXG4vLyBzcmMvcmVhY3QvaG9va3MvY29udHJhY3RzL3VzZUV2ZW50cy50c1xuaW1wb3J0IHsgdXNlQ29udGV4dCBhcyB1c2VDb250ZXh0NiwgdXNlTWVtbyBhcyB1c2VNZW1vOSB9IGZyb20gXCJyZWFjdFwiO1xudmFyIHVzZUV2ZW50cyA9IChjb250cmFjdEFkZHJlc3MsIGZpbHRlcnMpID0+IHtcbiAgY29uc3QgeyBldmVudHMsIHJlbW92ZUV2ZW50IH0gPSB1c2VDb250ZXh0NihFdmVudHNDb250ZXh0KTtcbiAgY29uc3QgY29udHJhY3RFdmVudHMgPSB1c2VNZW1vOSgoKSA9PiB7XG4gICAgaWYgKCFjb250cmFjdEFkZHJlc3MpXG4gICAgICByZXR1cm4gW107XG4gICAgcmV0dXJuIGV2ZW50c1tjb250cmFjdEFkZHJlc3MudG9TdHJpbmcoKV0/LmZpbHRlcihcbiAgICAgICh7IG5hbWUgfSkgPT4gZmlsdGVycyA/IGZpbHRlcnMuaW5jbHVkZXMobmFtZSkgOiB0cnVlXG4gICAgKSA/PyBbXTtcbiAgfSwgW2V2ZW50cywgY29udHJhY3RBZGRyZXNzXSk7XG4gIHJldHVybiB7IGV2ZW50czogY29udHJhY3RFdmVudHMsIHJlbW92ZUV2ZW50IH07XG59O1xuXG4vLyBzcmMvcmVhY3QvaG9va3MvY29udHJhY3RzL3VzZU1ldGFkYXRhLnRzXG5pbXBvcnQgeyB1c2VFZmZlY3QgYXMgdXNlRWZmZWN0MTAsIHVzZVN0YXRlIGFzIHVzZVN0YXRlOCB9IGZyb20gXCJyZWFjdFwiO1xudmFyIHV0ZjhkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XG52YXIgZm9ybWF0TmFtZSA9IChuKSA9PiBuLnJlcGxhY2UoXCIuY29udHJhY3RcIiwgXCJcIikucmVwbGFjZShcIi5qc29uXCIsIFwiXCIpLnNwbGl0KFwiX1wiKS5qb2luKFwiIFwiKTtcbmZ1bmN0aW9uIHVzZU1ldGFkYXRhKG9wdGlvbnMgPSB7IHJlcXVpcmVXYXNtOiB0cnVlIH0sIGluaXRpYWxWYWx1ZSwgY2hhaW5JZCkge1xuICBjb25zdCBjaGFpbkFwaSA9IHVzZUFwaShjaGFpbklkKTtcbiAgY29uc3QgeyByZXF1aXJlV2FzbSB9ID0gb3B0aW9ucztcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZTgoXG4gICAgKCkgPT4ganNvblRvQWJpKHsgLi4ub3B0aW9ucyB9LCBpbml0aWFsVmFsdWUsIGNoYWluQXBpPy5hcGkpXG4gICk7XG4gIGZ1bmN0aW9uIHNldChmaWxlKSB7XG4gICAgdG9CYXNpY01ldGFkYXRhKGZpbGUpLnRoZW4oKGJhc2ljRmlsZSkgPT4ge1xuICAgICAgY29uc3QganNvbiA9IEpTT04ucGFyc2UodXRmOGRlY29kZXIuZGVjb2RlKGJhc2ljRmlsZS5kYXRhKSk7XG4gICAgICBjb25zdCBuZXdTdGF0ZSA9IGpzb25Ub0FiaShcbiAgICAgICAge1xuICAgICAgICAgIHJlcXVpcmVXYXNtLFxuICAgICAgICAgIG5hbWU6IGZvcm1hdE5hbWUoYmFzaWNGaWxlLm5hbWUpLFxuICAgICAgICAgIHNpemU6IGJhc2ljRmlsZS5zaXplXG4gICAgICAgIH0sXG4gICAgICAgIGpzb24sXG4gICAgICAgIGNoYWluQXBpPy5hcGlcbiAgICAgICk7XG4gICAgICBpZiAobmV3U3RhdGUuZXJyb3IpIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIC4uLkRFRkFVTFQsXG4gICAgICAgICAgZXJyb3I6IG5ld1N0YXRlLmVycm9yXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzZXRTdGF0ZShuZXdTdGF0ZSk7XG4gICAgfSkuY2F0Y2goKF8pID0+IHtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgLi4uREVGQVVMVCxcbiAgICAgICAgZXJyb3I6IFwiSW52YWxpZCBmaWxlLlwiIC8qIEludmFsaWRGaWxlICovXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICBzZXRTdGF0ZShERUZBVUxUKTtcbiAgfVxuICB1c2VFZmZlY3QxMCgoKSA9PiB7XG4gICAgc2V0U3RhdGUoXG4gICAgICBqc29uVG9BYmkoeyByZXF1aXJlV2FzbSB9LCBpbml0aWFsVmFsdWUsIGNoYWluQXBpPy5hcGkpXG4gICAgKTtcbiAgfSwgW2NoYWluQXBpPy5hcGksIGluaXRpYWxWYWx1ZSwgcmVxdWlyZVdhc21dKTtcbiAgcmV0dXJuIHtcbiAgICAuLi5zdGF0ZSxcbiAgICBzZXQsXG4gICAgY2xlYXJcbiAgfTtcbn1cblxuLy8gc3JjL3JlYWN0L2hvb2tzL2NvbnRyYWN0cy91c2VTYWx0ZXIudHNcbmltcG9ydCB7IHVzZUNhbGxiYWNrIGFzIHVzZUNhbGxiYWNrNiwgdXNlRWZmZWN0IGFzIHVzZUVmZmVjdDExLCB1c2VTdGF0ZSBhcyB1c2VTdGF0ZTkgfSBmcm9tIFwicmVhY3RcIjtcbnZhciBTYWx0ZXJFcnJvciA9IC8qIEBfX1BVUkVfXyAqLyAoKFNhbHRlckVycm9yMikgPT4ge1xuICBTYWx0ZXJFcnJvcjJbXCJJbnZhbGlkSGFzaFwiXSA9IFwiSW52YWxpZCBzYWx0IGhhc2ggdmFsdWUuXCI7XG4gIHJldHVybiBTYWx0ZXJFcnJvcjI7XG59KShTYWx0ZXJFcnJvciB8fCB7fSk7XG52YXIgdXNlU2FsdGVyID0gKCkgPT4ge1xuICBjb25zdCBbc2FsdCwgc2V0U2FsdF0gPSB1c2VTdGF0ZTkocHNldWRvUmFuZG9tSGV4KCkpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlOSgpO1xuICB1c2VFZmZlY3QxMSgoKSA9PiB7XG4gICAgaWYgKGlzVmFsaWRIYXNoKHNhbHQpKSB7XG4gICAgICBlcnJvciAmJiBzZXRFcnJvcih2b2lkIDApO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZXRFcnJvcihcIkludmFsaWQgc2FsdCBoYXNoIHZhbHVlLlwiIC8qIEludmFsaWRIYXNoICovKTtcbiAgfSwgW3NhbHRdKTtcbiAgY29uc3QgcmVnZW5lcmF0ZSA9IHVzZUNhbGxiYWNrNigoKSA9PiB7XG4gICAgY29uc3QgcyA9IHBzZXVkb1JhbmRvbUhleCgpO1xuICAgIHNldFNhbHQocyk7XG4gIH0sIFtdKTtcbiAgY29uc3Qgc2V0ID0gdXNlQ2FsbGJhY2s2KChzKSA9PiB7XG4gICAgc2V0U2FsdChzKTtcbiAgfSwgW10pO1xuICBjb25zdCByZXNldFN0YXRlID0gdXNlQ2FsbGJhY2s2KCgpID0+IHtcbiAgICBzZXRTYWx0KFwiXCIpO1xuICAgIHNldEVycm9yKHZvaWQgMCk7XG4gIH0sIFtdKTtcbiAgcmV0dXJuIHtcbiAgICBzYWx0LFxuICAgIHJlc2V0U3RhdGUsXG4gICAgcmVnZW5lcmF0ZSxcbiAgICBzZXQsXG4gICAgZXJyb3JcbiAgfTtcbn07XG5cbi8vIHNyYy9yZWFjdC9ob29rcy9jb250cmFjdHMvdXNlVHgudHNcbmltcG9ydCB7IHVzZU1lbW8gYXMgdXNlTWVtbzEwLCB1c2VTdGF0ZSBhcyB1c2VTdGF0ZTEwIH0gZnJvbSBcInJlYWN0XCI7XG5mdW5jdGlvbiB1c2VUeChjaGFpbkNvbnRyYWN0LCBtZXNzYWdlKSB7XG4gIGNvbnN0IHsgYWNjb3VudCB9ID0gdXNlV2FsbGV0KCk7XG4gIGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSB1c2VTdGF0ZTEwKFwiTm9uZVwiKTtcbiAgY29uc3QgW3Jlc3VsdCwgc2V0UmVzdWx0XSA9IHVzZVN0YXRlMTAoKTtcbiAgY29uc3QgZHJ5UnVuID0gdXNlRHJ5UnVuKGNoYWluQ29udHJhY3QsIG1lc3NhZ2UpO1xuICBjb25zdCB0eEV2ZW50cyA9IHVzZVR4RXZlbnRzKHsgc3RhdHVzLCByZXN1bHQgfSk7XG4gIGNvbnN0IHNpZ25BbmRTZW5kID0gdXNlTWVtbzEwKFxuICAgICgpID0+IChwYXJhbXMsIG9wdGlvbnMsIGNiKSA9PiB7XG4gICAgICBpZiAoIWNoYWluQ29udHJhY3Q/LmNvbnRyYWN0IHx8ICFhY2NvdW50IHx8ICFhY2NvdW50LndhbGxldD8uZXh0ZW5zaW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGRyeVJ1bi5zZW5kKHBhcmFtcywgb3B0aW9ucykudGhlbigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgaWYgKCFyZXNwb25zZSB8fCAhcmVzcG9uc2Uub2spXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICBzZXRTdGF0dXMoXCJQZW5kaW5nU2lnbmF0dXJlXCIpO1xuICAgICAgICBjb25zdCB7IGdhc1JlcXVpcmVkIH0gPSByZXNwb25zZS52YWx1ZS5yYXc7XG4gICAgICAgIGNvbnN0IHR4ID0gY2hhaW5Db250cmFjdD8uY29udHJhY3QudHhbbWVzc2FnZV07XG4gICAgICAgIGlmICghdHgpIHtcbiAgICAgICAgICBjYj8uKFxuICAgICAgICAgICAgdm9pZCAwLFxuICAgICAgICAgICAgY2hhaW5Db250cmFjdC5jb250cmFjdC5hcGksXG4gICAgICAgICAgICBgJyR7bWVzc2FnZX0nIG5vdCBmb3VuZCBvbiBjb250cmFjdCBpbnN0YW5jZWBcbiAgICAgICAgICApO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0eChcbiAgICAgICAgICB7IGdhc0xpbWl0OiBnYXNSZXF1aXJlZCwgLi4udG9Db250cmFjdE9wdGlvbnMob3B0aW9ucykgfSxcbiAgICAgICAgICAuLi5wYXJhbXMgfHwgW11cbiAgICAgICAgKS5zaWduQW5kU2VuZChcbiAgICAgICAgICBhY2NvdW50LmFkZHJlc3MsXG4gICAgICAgICAgeyBzaWduZXI6IGFjY291bnQud2FsbGV0Py5leHRlbnNpb24/LnNpZ25lciB9LFxuICAgICAgICAgIChyZXNwb25zZTIpID0+IHtcbiAgICAgICAgICAgIHNldFJlc3VsdChyZXNwb25zZTIpO1xuICAgICAgICAgICAgc2V0U3RhdHVzKHJlc3BvbnNlMi5zdGF0dXMudHlwZSk7XG4gICAgICAgICAgICBjYj8uKHJlc3BvbnNlMiwgY2hhaW5Db250cmFjdD8uY29udHJhY3QuYXBpKTtcbiAgICAgICAgICB9XG4gICAgICAgICkuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICBjYj8uKHZvaWQgMCwgY2hhaW5Db250cmFjdC5jb250cmFjdC5hcGksIGUpO1xuICAgICAgICAgIHNldFN0YXR1cyhcIk5vbmVcIik7XG4gICAgICAgIH0pO1xuICAgICAgfSkuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgY2I/Lih2b2lkIDAsIGNoYWluQ29udHJhY3QuY29udHJhY3QuYXBpLCBlKTtcbiAgICAgICAgc2V0U3RhdHVzKFwiTm9uZVwiKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgW2FjY291bnQsIGFjY291bnQ/LndhbGxldD8uZXh0ZW5zaW9uPy5zaWduZXIsIGNoYWluQ29udHJhY3Q/LmNvbnRyYWN0XVxuICApO1xuICByZXR1cm4ge1xuICAgIHNpZ25BbmRTZW5kLFxuICAgIHN0YXR1cyxcbiAgICByZXN1bHQsXG4gICAgcmVzZXRTdGF0ZTogKCkgPT4ge1xuICAgICAgc2V0UmVzdWx0KHZvaWQgMCk7XG4gICAgICBzZXRTdGF0dXMoXCJOb25lXCIpO1xuICAgICAgdHhFdmVudHMucmVzZXRTdGF0ZSgpO1xuICAgIH0sXG4gICAgZXZlbnRzOiB0eEV2ZW50cy5ldmVudHNcbiAgfTtcbn1cblxuLy8gc3JjL3JlYWN0L2hvb2tzL2NvbnRyYWN0cy91c2VUeFBheW1lbnRJbmZvLnRzXG5pbXBvcnQgeyB1c2VDYWxsYmFjayBhcyB1c2VDYWxsYmFjazcsIHVzZVN0YXRlIGFzIHVzZVN0YXRlMTEgfSBmcm9tIFwicmVhY3RcIjtcbmZ1bmN0aW9uIHVzZVR4UGF5bWVudEluZm8oY2hhaW5Db250cmFjdCwgbWVzc2FnZSkge1xuICBjb25zdCBbaXNTdWJtaXR0aW5nLCBzZXRJc1N1Ym1pdHRpbmddID0gdXNlU3RhdGUxMShmYWxzZSk7XG4gIGNvbnN0IFtyZXN1bHQsIHNldFJlc3VsdF0gPSB1c2VTdGF0ZTExKCk7XG4gIGNvbnN0IHsgYWNjb3VudCB9ID0gdXNlV2FsbGV0KCk7XG4gIGNvbnN0IGRlZmF1bHRDYWxsZXIgPSB1c2VEZWZhdWx0Q2FsbGVyKCk7XG4gIGNvbnN0IHNlbmQgPSB1c2VDYWxsYmFjazcoXG4gICAgYXN5bmMgKHBhcmFtcywgb3B0aW9ucywgc2lnbmVyT3B0aW9ucykgPT4ge1xuICAgICAgY29uc3QgY2FsbGVyID0gYWNjb3VudD8uYWRkcmVzcyB8fCBvcHRpb25zPy5kZWZhdWx0Q2FsbGVyID8gZGVmYXVsdENhbGxlciA6IHZvaWQgMDtcbiAgICAgIGlmICghY2hhaW5Db250cmFjdD8uY29udHJhY3QgfHwgIWNhbGxlcilcbiAgICAgICAgcmV0dXJuO1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0SXNTdWJtaXR0aW5nKHRydWUpO1xuICAgICAgICBjb25zdCBwYXltZW50SW5mb1Jlc3VsdCA9IGF3YWl0IHR4UGF5bWVudEluZm8oXG4gICAgICAgICAgY2hhaW5Db250cmFjdC5jb250cmFjdCxcbiAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgIGNhbGxlcixcbiAgICAgICAgICBwYXJhbXMsXG4gICAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgICBzaWduZXJPcHRpb25zXG4gICAgICAgICk7XG4gICAgICAgIHNldFJlc3VsdChwYXltZW50SW5mb1Jlc3VsdCk7XG4gICAgICAgIHNldElzU3VibWl0dGluZyhmYWxzZSk7XG4gICAgICAgIHJldHVybiBwYXltZW50SW5mb1Jlc3VsdDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgICAgc2V0SXNTdWJtaXR0aW5nKGZhbHNlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0sXG4gICAgW2NoYWluQ29udHJhY3Q/LmNvbnRyYWN0LCBtZXNzYWdlLCBhY2NvdW50LCBkZWZhdWx0Q2FsbGVyXVxuICApO1xuICByZXR1cm4ge1xuICAgIGlzU3VibWl0dGluZyxcbiAgICByZXNvbHZlZDogQm9vbGVhbighaXNTdWJtaXR0aW5nICYmIHJlc3VsdCksXG4gICAgcmVzdWx0LFxuICAgIHNlbmRcbiAgfTtcbn1cblxuLy8gc3JjL3JlYWN0L2hvb2tzL2hlbHBlcnMvdXNlVW5peE1pbGxpVG9EYXRlLnRzXG5pbXBvcnQgeyB1c2VNZW1vIGFzIHVzZU1lbW8xMSB9IGZyb20gXCJyZWFjdFwiO1xudmFyIHVzZVVuaXhNaWxsaVRvRGF0ZSA9ICh1bml4SW5NaWxsaVNlY29uZHMpID0+IHVzZU1lbW8xMSgoKSA9PiB1bml4TWlsbGlUb0RhdGUodW5peEluTWlsbGlTZWNvbmRzKSwgW3VuaXhJbk1pbGxpU2Vjb25kc10pO1xuXG4vLyBzcmMvcmVhY3QvaG9va3Mvc3Vic3RyYXRlL2JhbGFuY2UvdXNlQmFsYW5jZS50c1xuaW1wb3J0IHsgdXNlRWZmZWN0IGFzIHVzZUVmZmVjdDEyLCB1c2VTdGF0ZSBhcyB1c2VTdGF0ZTEyIH0gZnJvbSBcInJlYWN0XCI7XG52YXIgdXNlQmFsYW5jZSA9IChhY2NvdW50LCBjaGFpbklkKSA9PiB7XG4gIGNvbnN0IFtiYWxhbmNlLCBzZXRCYWxhbmNlXSA9IHVzZVN0YXRlMTIoKTtcbiAgY29uc3QgeyBibG9ja051bWJlciB9ID0gdXNlQmxvY2tIZWFkZXIoY2hhaW5JZCkgfHwge307XG4gIGNvbnN0IGNoYWluQ29uZmlnID0gdXNlQ2hhaW4oY2hhaW5JZCk7XG4gIGNvbnN0IGNoYWluID0gdXNlQXBpKGNoYWluQ29uZmlnPy5pZCk7XG4gIHVzZUVmZmVjdDEyKCgpID0+IHtcbiAgICBpZiAoIWNoYWluPy5hcGkgfHwgIWFjY291bnQgfHwgIWFjY291bnQuYWRkcmVzcylcbiAgICAgIHJldHVybjtcbiAgICBnZXRCYWxhbmNlKGNoYWluLmFwaSwgYWNjb3VudCkudGhlbihzZXRCYWxhbmNlKS5jYXRjaChjb25zb2xlLmVycm9yKTtcbiAgfSwgW2Jsb2NrTnVtYmVyLCBhY2NvdW50XSk7XG4gIHJldHVybiBiYWxhbmNlO1xufTtcblxuLy8gc3JjL3JlYWN0L2hvb2tzL3N1YnN0cmF0ZS90aW1lc3RhbXAvdXNlVGltZXN0YW1wTm93LnRzXG5pbXBvcnQgeyB1c2VFZmZlY3QgYXMgdXNlRWZmZWN0MTMsIHVzZVN0YXRlIGFzIHVzZVN0YXRlMTMgfSBmcm9tIFwicmVhY3RcIjtcbnZhciB1c2VUaW1lc3RhbXBOb3cgPSAoY2hhaW5JZCkgPT4ge1xuICBjb25zdCBbbm93LCBzZXROb3ddID0gdXNlU3RhdGUxMygpO1xuICBjb25zdCBiID0gdXNlQmxvY2tIZWFkZXIoY2hhaW5JZCk7XG4gIGNvbnN0IGNoYWluQXBpID0gdXNlQXBpKGNoYWluSWQpO1xuICB1c2VFZmZlY3QxMygoKSA9PiB7XG4gICAgZ2V0VGltZXN0YW1wVW5peChjaGFpbkFwaT8uYXBpKS50aGVuKHNldE5vdykuY2F0Y2goKTtcbiAgfSwgW2I/LmJsb2NrTnVtYmVyXSk7XG4gIHJldHVybiBub3c7XG59O1xuXG4vLyBzcmMvcmVhY3QvaG9va3Mvc3Vic3RyYXRlL3RpbWVzdGFtcC91c2VUaW1lc3RhbXBEYXRlLnRzXG52YXIgdXNlVGltZXN0YW1wRGF0ZSA9IChjaGFpbklkKSA9PiB7XG4gIGNvbnN0IHVuaXggPSB1c2VUaW1lc3RhbXBOb3coY2hhaW5JZCk7XG4gIHJldHVybiB1c2VVbml4TWlsbGlUb0RhdGUodW5peCk7XG59O1xuXG4vLyBzcmMvcmVhY3QvaG9va3Mvc3Vic3RyYXRlL3RpbWVzdGFtcC91c2VUaW1lc3RhbXBRdWVyeS50c1xuaW1wb3J0IHsgdXNlRWZmZWN0IGFzIHVzZUVmZmVjdDE0LCB1c2VTdGF0ZSBhcyB1c2VTdGF0ZTE0IH0gZnJvbSBcInJlYWN0XCI7XG52YXIgdXNlVGltZXN0YW1wUXVlcnkgPSAoY2hhaW5JZCkgPT4ge1xuICBjb25zdCBjaGFpbkFwaSA9IHVzZUFwaShjaGFpbklkKTtcbiAgY29uc3QgW3RpbWVzdGFtcCwgc2V0VGltZXN0YW1wXSA9IHVzZVN0YXRlMTQoKTtcbiAgdXNlRWZmZWN0MTQoKCkgPT4ge1xuICAgIGNvbnN0IHQgPSBnZXRUaW1lc3RhbXBRdWVyeShjaGFpbkFwaT8uYXBpKTtcbiAgICBzZXRUaW1lc3RhbXAodCk7XG4gIH0sIFtjaGFpbkFwaT8uYXBpXSk7XG4gIHJldHVybiB0aW1lc3RhbXA7XG59O1xuXG4vLyBzcmMvcmVhY3QvaG9va3Mvc3Vic3RyYXRlL3VzZUNoYWluRGVjaW1hbHMudHNcbnZhciB1c2VDaGFpbkRlY2ltYWxzID0gKGNoYWluSWQpID0+IHtcbiAgY29uc3QgY2hhaW5BcGkgPSB1c2VBcGkoY2hhaW5JZCk7XG4gIGlmICghY2hhaW5BcGk/LmFwaSlcbiAgICByZXR1cm4gdm9pZCAwO1xuICByZXR1cm4gY2hhaW5EZWNpbWFscyhjaGFpbkFwaT8uYXBpKTtcbn07XG5cbi8vIHNyYy9yZWFjdC9ob29rcy9zdWJzdHJhdGUvdXNlVG9rZW5TeW1ib2wudHNcbnZhciB1c2VUb2tlblN5bWJvbCA9IChjaGFpbklkKSA9PiB7XG4gIGNvbnN0IGNoYWluQXBpID0gdXNlQXBpKGNoYWluSWQpO1xuICBpZiAoIWNoYWluQXBpPy5hcGkpXG4gICAgcmV0dXJuIHZvaWQgMDtcbiAgcmV0dXJuIGNoYWluVG9rZW5TeW1ib2woY2hhaW5BcGk/LmFwaSk7XG59O1xuXG4vLyBzcmMvcmVhY3QvaG9va3Mvc3Vic3RyYXRlL3VzZVRyYW5zZmVyLnRzXG5pbXBvcnQgeyB1c2VDYWxsYmFjayBhcyB1c2VDYWxsYmFjazgsIHVzZU1lbW8gYXMgdXNlTWVtbzEyLCB1c2VTdGF0ZSBhcyB1c2VTdGF0ZTE1IH0gZnJvbSBcInJlYWN0XCI7XG52YXIgdXNlVHJhbnNmZXIgPSAoY2hhaW5JZCkgPT4ge1xuICBjb25zdCBbaGFzaCwgc2V0SGFzaF0gPSB1c2VTdGF0ZTE1KCk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGUxNSgpO1xuICBjb25zdCBbaXNTdWJtaXR0aW5nLCBzZXRJc1N1Ym1pdHRpbmddID0gdXNlU3RhdGUxNShmYWxzZSk7XG4gIGNvbnN0IHsgYWNjb3VudCB9ID0gdXNlV2FsbGV0KCk7XG4gIGNvbnN0IGNoYWluQ29uZmlnID0gdXNlQ2hhaW4oY2hhaW5JZCk7XG4gIGNvbnN0IGNoYWluID0gdXNlQXBpKGNoYWluQ29uZmlnPy5pZCk7XG4gIGNvbnN0IHJlc2V0U3RhdGUgPSB1c2VDYWxsYmFjazgoKCkgPT4ge1xuICAgIHNldEhhc2godm9pZCAwKTtcbiAgICBzZXRFcnJvcih2b2lkIDApO1xuICB9LCBbXSk7XG4gIGNvbnN0IHNpZ25BbmRTZW5kID0gdXNlTWVtbzEyKFxuICAgICgpID0+ICh0bywgYW1vdW50LCBvcHRpb25zKSA9PiB7XG4gICAgICBpZiAoIWNoYWluPy5hcGkgfHwgIWFjY291bnQgfHwgIWFjY291bnQuYWRkcmVzcyB8fCAhYWNjb3VudC53YWxsZXQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgc2V0SXNTdWJtaXR0aW5nKHRydWUpO1xuICAgICAgdHJhbnNmZXIoY2hhaW4uYXBpLCB0bywgYW1vdW50LCBhY2NvdW50Py53YWxsZXQuZXh0ZW5zaW9uLnNpZ25lciwgb3B0aW9ucykudGhlbihzZXRIYXNoKS5jYXRjaChzZXRFcnJvcikuZmluYWxseSgoKSA9PiBzZXRJc1N1Ym1pdHRpbmcoZmFsc2UpKTtcbiAgICB9LFxuICAgIFtjaGFpbj8uYXBpLCBhY2NvdW50Py5hZGRyZXNzXVxuICApO1xuICByZXR1cm4geyBzaWduQW5kU2VuZCwgZXJyb3IsIGhhc2gsIHJlc2V0U3RhdGUsIGlzU3VibWl0dGluZyB9O1xufTtcblxuLy8gc3JjL3JlYWN0L2hvb2tzL3dhbGxldHMvdXNlQWxsV2FsbGV0cy50c1xuaW1wb3J0IHsgdXNlTWVtbyBhcyB1c2VNZW1vMTMgfSBmcm9tIFwicmVhY3RcIjtcbnZhciB1c2VBbGxXYWxsZXRzID0gKCkgPT4ge1xuICBjb25zdCB7IGdldFdhbGxldHM6IGdldFdhbGxldHMyIH0gPSB1c2VXYWxsZXQoKTtcbiAgcmV0dXJuIHVzZU1lbW8xMygoKSA9PiBnZXRXYWxsZXRzMigpLCBbXSk7XG59O1xuXG4vLyBzcmMvcmVhY3QvaG9va3Mvd2FsbGV0cy91c2VJbnN0YWxsZWRXYWxsZXRzLnRzXG5pbXBvcnQgeyB1c2VNZW1vIGFzIHVzZU1lbW8xNCB9IGZyb20gXCJyZWFjdFwiO1xudmFyIHVzZUluc3RhbGxlZFdhbGxldHMgPSAoKSA9PiB7XG4gIGNvbnN0IHsgZ2V0V2FsbGV0czogZ2V0V2FsbGV0czIgfSA9IHVzZVdhbGxldCgpO1xuICByZXR1cm4gdXNlTWVtbzE0KCgpID0+IGdldFdhbGxldHMyKCkuZmlsdGVyKCh3KSA9PiB3Lmluc3RhbGxlZCksIFtdKTtcbn07XG5cbi8vIHNyYy9yZWFjdC9ob29rcy93YWxsZXRzL3VzZVVuaW5zdGFsbGVkV2FsbGV0cy50c1xuaW1wb3J0IHsgdXNlTWVtbyBhcyB1c2VNZW1vMTUgfSBmcm9tIFwicmVhY3RcIjtcbnZhciB1c2VVbmluc3RhbGxlZFdhbGxldHMgPSAoKSA9PiB7XG4gIGNvbnN0IHsgZ2V0V2FsbGV0czogZ2V0V2FsbGV0czIgfSA9IHVzZVdhbGxldCgpO1xuICByZXR1cm4gdXNlTWVtbzE1KCgpID0+IGdldFdhbGxldHMyKCkuZmlsdGVyKCh3KSA9PiAhdy5pbnN0YWxsZWQpLCBbXSk7XG59O1xuXG4vLyBzcmMvcmVhY3QvcHJvdmlkZXJzL2NvbmZpZy9wcm92aWRlci50c3hcbmltcG9ydCBSZWFjdDYsIHsgdXNlQ2FsbGJhY2sgYXMgdXNlQ2FsbGJhY2s5LCB1c2VFZmZlY3QgYXMgdXNlRWZmZWN0MTUsIHVzZU1lbW8gYXMgdXNlTWVtbzE2LCB1c2VTdGF0ZSBhcyB1c2VTdGF0ZTE2IH0gZnJvbSBcInJlYWN0XCI7XG52YXIgdG9Jbml0aWFsUnBjcyA9IChjLCBfcnBjcykgPT4gYy5yZWR1Y2UoXG4gIChhY2MsIGNoKSA9PiAoeyAuLi5hY2MsIFtjaC5pZF06IGNoLnJwY3M/LlswXSB8fCBcIlwiIH0pLFxuICB7fVxuKTtcbnZhciBDb25maWdQcm92aWRlciA9ICh7XG4gIGNvbmZpZyxcbiAgY2hpbGRyZW5cbn0pID0+IHtcbiAgY29uc3QgZGVmYXVsdENoYWluSWQgPSB1c2VNZW1vMTYoKCkgPT4gY29uZmlnLmNoYWluc1swXS5pZCwgW2NvbmZpZy5jaGFpbnNbMF1dKTtcbiAgY29uc3QgW2NoYWluUnBjcywgc2V0Q2hhaW5ScGNzXSA9IHVzZVN0YXRlMTYoXG4gICAgdG9Jbml0aWFsUnBjcyhjb25maWcuY2hhaW5zLCB7fSlcbiAgKTtcbiAgY29uc3Qgc2V0Q2hhaW5ScGMgPSB1c2VDYWxsYmFjazkoKHJwYywgY2lkKSA9PiB7XG4gICAgY29uc3QgY2hhaW5JZE9yRGVmYXVsdCA9IGNpZCB8fCBkZWZhdWx0Q2hhaW5JZDtcbiAgICBjaGFpbklkT3JEZWZhdWx0ICYmIHNldENoYWluUnBjcyh7IC4uLmNoYWluUnBjcywgW2NoYWluSWRPckRlZmF1bHRdOiBycGMgfSk7XG4gIH0sIFtdKTtcbiAgdXNlRWZmZWN0MTUoKCkgPT4ge1xuICAgIHNldENoYWluUnBjcyh0b0luaXRpYWxScGNzKGNvbmZpZy5jaGFpbnMsIGNoYWluUnBjcykpO1xuICAgIGlmICghY29uZmlnLmNoYWlucy5sZW5ndGgpIHtcbiAgICAgIGNvbnN0IGVycm9yID0gXCJDaGFpbnMgbm90IGNvbmZpZ3VyZWQgaW4gQ29uZmlnIFByb3ZpZGVyXCI7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgIHRocm93IEVycm9yKGVycm9yKTtcbiAgICB9XG4gIH0sIFtjb25maWcuY2hhaW5zXSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3Q2LmNyZWF0ZUVsZW1lbnQoXG4gICAgQ29uZmlnQ29udGV4dC5Qcm92aWRlcixcbiAgICB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICAuLi5ERUZBVUxUX0NPTkZJRyxcbiAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICBzZXRDaGFpblJwYyxcbiAgICAgICAgY2hhaW5ScGNzXG4gICAgICB9LFxuICAgICAgY2hpbGRyZW5cbiAgICB9XG4gICk7XG59O1xuXG4vLyBzcmMvcmVhY3QvcHJvdmlkZXJzL1VzZUlua1Byb3ZpZGVyLnRzeFxuaW1wb3J0IFJlYWN0NyBmcm9tIFwicmVhY3RcIjtcbnZhciBVc2VJbmtQcm92aWRlciA9ICh7XG4gIGNoaWxkcmVuLFxuICBjb25maWdcbn0pID0+IC8qIEBfX1BVUkVfXyAqLyBSZWFjdDcuY3JlYXRlRWxlbWVudChDb25maWdQcm92aWRlciwgeyBjb25maWcgfSwgLyogQF9fUFVSRV9fICovIFJlYWN0Ny5jcmVhdGVFbGVtZW50KFdhbGxldFByb3ZpZGVyLCBudWxsLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q3LmNyZWF0ZUVsZW1lbnQoQVBJUHJvdmlkZXIsIG51bGwsIC8qIEBfX1BVUkVfXyAqLyBSZWFjdDcuY3JlYXRlRWxlbWVudChCbG9ja0hlYWRlclByb3ZpZGVyLCBudWxsLCAvKiBAX19QVVJFX18gKi8gUmVhY3Q3LmNyZWF0ZUVsZW1lbnQoRXZlbnRzUHJvdmlkZXIsIG51bGwsIGNoaWxkcmVuKSkpKSk7XG5leHBvcnQge1xuICBBUElDb250ZXh0LFxuICBBUElQcm92aWRlcixcbiAgQ2FsbEVycm9yLFxuICBDb2RlSGFzaEVycm9yLFxuICBEZXBsb3llckVycm9yLFxuICBTYWx0ZXJFcnJvcixcbiAgVXNlSW5rUHJvdmlkZXIsXG4gIHVzZUFiaU1lc3NhZ2UsXG4gIHVzZUFsbFdhbGxldHMsXG4gIHVzZUFwaSxcbiAgdXNlQXBpcyxcbiAgdXNlQmFsYW5jZSxcbiAgdXNlQmxvY2tIZWFkZXIsXG4gIHVzZUJsb2NrSGVhZGVycyxcbiAgdXNlQ2FsbCxcbiAgdXNlQ2FsbFN1YnNjcmlwdGlvbixcbiAgdXNlQ2hhaW4sXG4gIHVzZUNoYWluRGVjaW1hbHMsXG4gIHVzZUNoYWluUnBjLFxuICB1c2VDaGFpblJwY0xpc3QsXG4gIHVzZUNoYWlucyxcbiAgdXNlQ29kZUhhc2gsXG4gIHVzZUNvbmZpZyxcbiAgdXNlQ29udHJhY3QsXG4gIHVzZURlZmF1bHRDYWxsZXIsXG4gIHVzZURlcGxveWVyLFxuICB1c2VEcnlSdW4sXG4gIHVzZUV2ZW50U3Vic2NyaXB0aW9uLFxuICB1c2VFdmVudHMsXG4gIHVzZUluc3RhbGxlZFdhbGxldHMsXG4gIHVzZU1ldGFkYXRhLFxuICB1c2VTYWx0ZXIsXG4gIHVzZVRpbWVzdGFtcERhdGUsXG4gIHVzZVRpbWVzdGFtcE5vdyxcbiAgdXNlVGltZXN0YW1wUXVlcnksXG4gIHVzZVRva2VuU3ltYm9sLFxuICB1c2VUcmFuc2ZlcixcbiAgdXNlVHgsXG4gIHVzZVR4RXZlbnRzLFxuICB1c2VUeFBheW1lbnRJbmZvLFxuICB1c2VVbmluc3RhbGxlZFdhbGxldHMsXG4gIHVzZVVuaXhNaWxsaVRvRGF0ZSxcbiAgdXNlV2FsbGV0XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/useink/dist/index.mjs\n"));

/***/ })

}]);